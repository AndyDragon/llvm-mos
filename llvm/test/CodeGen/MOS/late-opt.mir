# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=mos-late-opt -verify-machineinstrs -o - %s | FileCheck %s
---
name: cmpimm0_elision
body: |
  bb.0.entry:
    liveins: $x
    ; CHECK-LABEL: name: cmpimm0_elision
    ; CHECK: $a = T_A killed $x, implicit-def $nz
    ; CHECK-NEXT: RTS implicit $n
    $a = T_A killed $x
    dead $c = CMPImm $a, 0, implicit-def $nz
    RTS implicit $n
...
---
name: cmpimm1
body: |
  bb.0.entry:
    liveins: $a
    ; CHECK-LABEL: name: cmpimm1
    ; CHECK: $a = T_A killed $x
    ; CHECK-NEXT: dead $c = CMPImm $a, 1, implicit-def $nz
    ; CHECK-NEXT: RTS implicit $n
    $a = T_A killed $x
    dead $c = CMPImm $a, 1, implicit-def $nz
    RTS implicit $n
...
---
name: cmpimm0_carry_used
body: |
  bb.0.entry:
    liveins: $a
    ; CHECK-LABEL: name: cmpimm0_carry_used
    ; CHECK: $a = T_A killed $x
    ; CHECK-NEXT: $c = CMPImm $a, 0, implicit-def $nz
    ; CHECK-NEXT: RTS implicit $n, implicit $c
    $a = T_A killed $x
    $c = CMPImm $a, 0, implicit-def $nz
    RTS implicit $n, implicit $c
...
---
name: cmpimm0_alone
body: |
  bb.0.entry:
    liveins: $a
    ; CHECK-LABEL: name: cmpimm0_alone
    ; CHECK: dead $c = CMPImm $a, 0, implicit-def $nz
    ; CHECK-NEXT: RTS implicit $n
    dead $c = CMPImm $a, 0, implicit-def $nz
    RTS implicit $n
...
---
name: cmpimm0_clobbered
body: |
  bb.0.entry:
    liveins: $a, $rc2
    ; CHECK-LABEL: name: cmpimm0_clobbered
    ; CHECK: $a = T_A killed $x
    ; CHECK-NEXT: $y = LDImag8 $rc2
    ; CHECK-NEXT: dead $c = CMPImm $a, 0, implicit-def $nz
    ; CHECK-NEXT: RTS implicit $n
    $a = T_A killed $x
    $y = LDImag8 $rc2
    dead $c = CMPImm $a, 0, implicit-def $nz
    RTS implicit $n
...
---
name: cmpimm0_not_clobbered
body: |
  bb.0.entry:
    liveins: $a, $y
    ; CHECK-LABEL: name: cmpimm0_not_clobbered
    ; CHECK: $a = T_A killed $x, implicit-def $nz
    ; CHECK-NEXT: $rc2 = STImag8 $y
    ; CHECK-NEXT: RTS implicit $n
    $a = T_A killed $x
    $rc2 = STImag8 $y
    dead $c = CMPImm $a, 0, implicit-def $nz
    RTS implicit $n
...
---
name: ldxyimm_to_inxydexy
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldxyimm_to_inxydexy
    ; CHECK: $x = LDImm 0
    ; CHECK-NEXT: $y = LDImm 5
    ; CHECK-NEXT: $x = IN $x
    ; CHECK-NEXT: $y = IN $y
    ; CHECK-NEXT: $x = DE killed $x
    ; CHECK-NEXT: $y = DE killed $y
    ; CHECK-NEXT: RTS implicit $x, implicit $y
    dead $x = LDImm 0
    dead $y = LDImm 5
    $x = LDImm 1
    $y = LDImm 6
    $x = LDImm 0
    $y = LDImm 5
    RTS implicit $x, implicit $y
...
---
name: ldxyimm_clobbered
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldxyimm_clobbered
    ; CHECK: dead $x = LDImm 0
    ; CHECK-NEXT: dead $x = LDImag8 $rc0
    ; CHECK-NEXT: $x = LDImm 1
    ; CHECK-NEXT: RTS implicit $x
    dead $x = LDImm 0
    dead $x = LDImag8 $rc0
    $x = LDImm 1
    RTS implicit $x
...
---
name: ldxyimm_target_index
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldxyimm_target_index
    ; CHECK: dead $x = LDImm target-flags(lo) target-index(mos-static-stack)
    ; CHECK-NEXT: $x = LDImm 1
    ; CHECK-NEXT: RTS implicit $x
    dead $x = LDImm target-flags(lo) target-index(mos-static-stack)
    $x = LDImm 1
    RTS implicit $x
...
---
name: ldxyimm_clear_killed
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ldxyimm_clear_killed
    ; CHECK: $x = LDImm 0
    ; CHECK-NEXT: $rc0 = STImag8 $x
    ; CHECK-NEXT: $x = IN killed $x
    ; CHECK-NEXT: RTS implicit $x
    $x = LDImm 0
    $rc0 = STImag8 killed $x
    $x = LDImm 1
    RTS implicit $x
...
