# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=greedy -verify-machineinstrs -o - %s | FileCheck %s
--- |
  define void @spill_static_gpr() norecurse {
    entry:
      ret void
  }
  define void @spill_static_Imag8() norecurse {
    entry:
      ret void
  }
  define void @spill_static_imag16() norecurse {
    entry:
      ret void
  }
---
---
name: spill_static_gpr
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $a
    ; CHECK-LABEL: name: spill_static_gpr
    ; CHECK: liveins: $a
    ; CHECK: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; CHECK: STAbsOffset [[COPY]], %stack.0, 0 :: (store 1 into %stack.0)
    ; CHECK: JSR &fn, mos_csr
    ; CHECK: [[LDAbsOffset:%[0-9]+]]:gpr = LDAbsOffset %stack.0, 0 :: (load 1 from %stack.0)
    ; CHECK: $a = COPY [[LDAbsOffset]]
    ; CHECK: RTS implicit $a
    %0:gpr = COPY $a
    JSR &fn, mos_csr
    $a = COPY %0
    RTS implicit $a
...
---
name: spill_static_Imag8
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $rc2, $rs2, $rs4
    ; CHECK-LABEL: name: spill_static_Imag8
    ; CHECK: liveins: $rc2, $rs2, $rs4
    ; CHECK: [[COPY:%[0-9]+]]:anyi8 = COPY $rc2
    ; CHECK: [[COPY1:%[0-9]+]]:gpr = COPY [[COPY]]
    ; CHECK: STAbsOffset [[COPY1]], %stack.0, 0 :: (store 1 into %stack.0)
    ; CHECK: JSR &fn, mos_csr
    ; CHECK: [[LDAbsOffset:%[0-9]+]]:gpr = LDAbsOffset %stack.0, 0 :: (load 1 from %stack.0)
    ; CHECK: [[COPY2:%[0-9]+]]:anyi8 = COPY [[LDAbsOffset]]
    ; CHECK: $rc2 = COPY [[COPY2]]
    ; CHECK: RTS implicit $rc2, implicit $rs2, implicit $rs4
    %0:imag8 = COPY $rc2
    JSR &fn, mos_csr
    $rc2 = COPY %0
    RTS implicit $rc2, implicit $rs2, implicit $rs4
...
---
name: spill_static_imag16
legalized: true
regBankSelected: true
tracksRegLiveness: true
body: |
  bb.0.entry:
    liveins: $a, $rs1, $rs2, $rs4

    ; Mark as not in SSA form so verifier doesn't complain about building imag16.
    ; CHECK-LABEL: name: spill_static_imag16
    ; CHECK: liveins: $a, $rs1, $rs2, $rs4
    ; CHECK: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; CHECK: dead [[COPY]]:gpr = COPY [[COPY]]
    ; CHECK: [[COPY1:%[0-9]+]]:imag16 = COPY $rs1
    ; CHECK: [[COPY2:%[0-9]+]]:gpr = COPY [[COPY1]].sublo
    ; CHECK: STAbsOffset [[COPY2]], %stack.0, 0 :: (store 1 into %stack.0)
    ; CHECK: [[COPY3:%[0-9]+]]:gpr = COPY [[COPY1]].subhi
    ; CHECK: STAbsOffset [[COPY3]], %stack.0, 1 :: (store 1 into %stack.0 + 1)
    ; CHECK: JSR &fn, mos_csr
    ; CHECK: [[LDAbsOffset:%[0-9]+]]:gpr = LDAbsOffset %stack.0, 0 :: (load 1 from %stack.0)
    ; CHECK: undef %5.sublo:imag16 = COPY [[LDAbsOffset]]
    ; CHECK: [[LDabs_offset1:%[0-9]+]]:gpr = LDAbsOffset %stack.0, 1 :: (load 1 from %stack.0 + 1)
    ; CHECK: %5.subhi:imag16 = COPY [[LDabs_offset1]]
    ; CHECK: $rs1 = COPY %5
    ; CHECK: RTS implicit $rs1, implicit $rs2, implicit $rs4
    %0:gpr = COPY $a
    %0:gpr = COPY %0
    %1:imag16 = COPY $rs1
    JSR &fn, mos_csr
    $rs1 = COPY %1
    RTS implicit $rs1, implicit $rs2, implicit $rs4
...
