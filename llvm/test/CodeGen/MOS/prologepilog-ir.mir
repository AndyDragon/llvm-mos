# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=prologepilog -verify-machineinstrs -o - %s | FileCheck %s -check-prefixes=6502
# RUN: llc -mtriple=mos -mcpu=mos65c02 -run-pass=prologepilog -verify-machineinstrs -o - %s | FileCheck %s -check-prefixes=65C02
--- |
  target datalayout = "e-p:16:8:8-i16:8:8-i32:8:8-i64:8:8-f32:8:8-f64:8:8-a:8:8-Fi8-n8"
  target triple = "mos"

  define void @norecurse() norecurse {
  entry:
    ret void
  }

  define void @norecurse_variable_sized() norecurse {
  entry:
    ret void
  }

  define void @interrupt_axy() "interrupt" {
  entry:
    ret void
  }

  define void @interrupt_x() "interrupt" {
  entry:
    ret void
  }

  define void @interrupt_csr() "interrupt" {
  entry:
    ret void
  }

  define void @interrupt_csrs_save_y() "interrupt" {
  entry:
    ret void
  }

  define void @interrupt_caller() "interrupt" {
  entry:
    ret void
  }
---
name: norecurse
stack:
  - { id: 0, size: 1}
  - { id: 1, size: 1}
body:             |
  bb.0.entry:
    ; 6502-LABEL: name: norecurse
    ; 6502: $c = LDCImm 0
    ; 6502: PH $a
    ; 6502: $a = COPY $rc0
    ; 6502: $a, $c, $v = ADCImm $a, 254, $c
    ; 6502: PH killed $a
    ; 6502: $a = COPY $rc1
    ; 6502: $a, $c, $v = ADCImm $a, 255, $c
    ; 6502: $rc1 = COPY killed $a
    ; 6502: $a = PL
    ; 6502: $rc0 = COPY killed $a
    ; 6502: $a = PL
    ; 6502: KILL killed $p
    ; 6502: STAbs $a, target-index(mos-static-stack) :: (store 1 into %stack.0)
    ; 6502: $a = LDAbs target-index(mos-static-stack) + 1 :: (load 1 from %stack.1)
    ; 6502: $c = LDCImm 0
    ; 6502: $a = COPY $rc0
    ; 6502: $a, $c, $v = ADCImm $a, 2, $c
    ; 6502: $rc0 = COPY killed $a
    ; 6502: $a = COPY $rc1
    ; 6502: $a, $c, $v = ADCImm $a, 0, $c
    ; 6502: $rc1 = COPY killed $a
    ; 6502: RTS
    ; 65C02-LABEL: name: norecurse
    ; 65C02: $c = LDCImm 0
    ; 65C02: PH $a
    ; 65C02: $a = COPY $rc0
    ; 65C02: $a, $c, $v = ADCImm $a, 254, $c
    ; 65C02: PH killed $a
    ; 65C02: $a = COPY $rc1
    ; 65C02: $a, $c, $v = ADCImm $a, 255, $c
    ; 65C02: $rc1 = COPY killed $a
    ; 65C02: $a = PL
    ; 65C02: $rc0 = COPY killed $a
    ; 65C02: $a = PL
    ; 65C02: KILL killed $p
    ; 65C02: STAbs $a, target-index(mos-static-stack) :: (store 1 into %stack.0)
    ; 65C02: $a = LDAbs target-index(mos-static-stack) + 1 :: (load 1 from %stack.1)
    ; 65C02: $c = LDCImm 0
    ; 65C02: $a = COPY $rc0
    ; 65C02: $a, $c, $v = ADCImm $a, 2, $c
    ; 65C02: $rc0 = COPY killed $a
    ; 65C02: $a = COPY $rc1
    ; 65C02: $a, $c, $v = ADCImm $a, 0, $c
    ; 65C02: $rc1 = COPY killed $a
    ; 65C02: RTS
    STAbsOffset $a, %stack.0, 0 :: (store 1 into %stack.0)
    $a = LDAbsOffset %stack.1, 0 :: (load 1 from %stack.1)
    ADJCALLSTACKDOWN 1, 0, implicit-def $rs0, implicit $rs0
    ADJCALLSTACKUP 1, 0, implicit-def $rs0, implicit $rs0
    ADJCALLSTACKDOWN 2, 0, implicit-def $rs0, implicit $rs0
    ADJCALLSTACKUP 2, 0, implicit-def $rs0, implicit $rs0
    RTS
...
---
name: norecurse_variable_sized
stack:
  - { id: 0, type: variable-sized }
  - { id: 1, size: 1 }
  - { id: 2, size: 2 }
body: |
  bb.0.entry:
    ; 6502-LABEL: name: norecurse_variable_sized
    ; 6502: $a = frame-setup COPY $rc30
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc31
    ; 6502: frame-setup PH killed $a
    ; 6502: $rs15 = COPY $rs0
    ; 6502: $a = LDAbs target-index(mos-static-stack) + 2 :: (load 1 from %stack.2 + 1)
    ; 6502: $rs0 = COPY $rs15
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc31 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc30 = frame-destroy COPY killed $a
    ; 6502: RTS implicit $rc30, implicit $rc31
    ; 65C02-LABEL: name: norecurse_variable_sized
    ; 65C02: $a = frame-setup COPY $rc30
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc31
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $rs15 = COPY $rs0
    ; 65C02: $a = LDAbs target-index(mos-static-stack) + 2 :: (load 1 from %stack.2 + 1)
    ; 65C02: $rs0 = COPY $rs15
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc31 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc30 = frame-destroy COPY killed $a
    ; 65C02: RTS implicit $rc30, implicit $rc31
    $a = LDAbsOffset %stack.2, 1 :: (load 1 from %stack.2 + 1)
    RTS
...
---
name: interrupt_axy
body: |
  bb.0.entry:
    ; 6502-LABEL: name: interrupt_axy
    ; 6502: frame-setup PH $a
    ; 6502: $a = frame-setup COPY $x
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $y
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup LDAbs &__save_a
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup LDAbs &__save_y
    ; 6502: frame-setup PH killed $a
    ; 6502: $x = LDImm 42
    ; 6502: $a = LDImm 43
    ; 6502: $y = LDImm 44
    ; 6502: $a = frame-destroy PL
    ; 6502: frame-destroy STAbs killed $a, &__save_y
    ; 6502: $a = frame-destroy PL
    ; 6502: frame-destroy STAbs killed $a, &__save_a
    ; 6502: $a = frame-destroy PL
    ; 6502: $y = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $x = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: RTI implicit $a, implicit $x, implicit $y
    ; 65C02-LABEL: name: interrupt_axy
    ; 65C02: frame-setup PH $a
    ; 65C02: frame-setup PH $x
    ; 65C02: frame-setup PH $y
    ; 65C02: $a = frame-setup LDAbs &__save_a
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup LDAbs &__save_y
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $x = LDImm 42
    ; 65C02: $a = LDImm 43
    ; 65C02: $y = LDImm 44
    ; 65C02: $a = frame-destroy PL
    ; 65C02: frame-destroy STAbs killed $a, &__save_y
    ; 65C02: $a = frame-destroy PL
    ; 65C02: frame-destroy STAbs killed $a, &__save_a
    ; 65C02: $y = frame-destroy PL
    ; 65C02: $x = frame-destroy PL
    ; 65C02: $a = frame-destroy PL
    ; 65C02: RTI implicit $a, implicit $x, implicit $y
    $x = LDImm 42
    $a = LDImm 43
    $y = LDImm 44
    RTI
...
---
name: interrupt_x
tracksRegLiveness: true
body: |
  ; 6502-LABEL: name: interrupt_x
  ; 6502: bb.0.entry:
  ; 6502:   successors: %bb.1(0x80000000)
  ; 6502:   liveins: $a, $x
  ; 6502:   frame-setup PH $a
  ; 6502:   $a = frame-setup COPY $x
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup LDAbs &__save_a
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup LDAbs &__save_y
  ; 6502:   frame-setup PH killed $a
  ; 6502: bb.1.entry:
  ; 6502:   $x = LDImm 42
  ; 6502:   $a = frame-destroy PL
  ; 6502:   frame-destroy STAbs killed $a, &__save_y
  ; 6502:   $a = frame-destroy PL
  ; 6502:   frame-destroy STAbs killed $a, &__save_a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   $x = frame-destroy COPY killed $a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   RTI implicit $a, implicit $x
  ; 65C02-LABEL: name: interrupt_x
  ; 65C02: bb.0.entry:
  ; 65C02:   successors: %bb.1(0x80000000)
  ; 65C02:   liveins: $a, $x
  ; 65C02:   frame-setup PH $a
  ; 65C02:   frame-setup PH $x
  ; 65C02:   $a = frame-setup LDAbs &__save_a
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = frame-setup LDAbs &__save_y
  ; 65C02:   frame-setup PH killed $a
  ; 65C02: bb.1.entry:
  ; 65C02:   $x = LDImm 42
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   frame-destroy STAbs killed $a, &__save_y
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   frame-destroy STAbs killed $a, &__save_a
  ; 65C02:   $x = frame-destroy PL
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   RTI implicit $a, implicit $x
  bb.0.entry:
  bb.1.entry:
    $x = LDImm 42
    RTI
...
---
name: interrupt_csr
tracksRegLiveness: true
body: |
  ; 6502-LABEL: name: interrupt_csr
  ; 6502: bb.0.entry:
  ; 6502:   successors: %bb.1(0x80000000)
  ; 6502:   liveins: $a, $rc30, $rc31
  ; 6502:   frame-setup PH $a
  ; 6502:   $a = frame-setup COPY $rc30
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup COPY $rc31
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup LDAbs &__save_a
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup LDAbs &__save_y
  ; 6502:   frame-setup PH killed $a
  ; 6502: bb.1.entry:
  ; 6502:   $rs15 = IMPLICIT_DEF
  ; 6502:   $a = frame-destroy PL
  ; 6502:   frame-destroy STAbs killed $a, &__save_y
  ; 6502:   $a = frame-destroy PL
  ; 6502:   frame-destroy STAbs killed $a, &__save_a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   $rc31 = frame-destroy COPY killed $a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   $rc30 = frame-destroy COPY killed $a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   RTI implicit $a, implicit $rc30, implicit $rc31
  ; 65C02-LABEL: name: interrupt_csr
  ; 65C02: bb.0.entry:
  ; 65C02:   successors: %bb.1(0x80000000)
  ; 65C02:   liveins: $a, $rc30, $rc31
  ; 65C02:   frame-setup PH $a
  ; 65C02:   $a = frame-setup COPY $rc30
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = frame-setup COPY $rc31
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = frame-setup LDAbs &__save_a
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = frame-setup LDAbs &__save_y
  ; 65C02:   frame-setup PH killed $a
  ; 65C02: bb.1.entry:
  ; 65C02:   $rs15 = IMPLICIT_DEF
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   frame-destroy STAbs killed $a, &__save_y
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   frame-destroy STAbs killed $a, &__save_a
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   $rc31 = frame-destroy COPY killed $a
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   $rc30 = frame-destroy COPY killed $a
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   RTI implicit $a, implicit $rc30, implicit $rc31
  bb.0.entry:
  bb.1.entry:
    $rs15 = IMPLICIT_DEF
    RTI
...
---
name: interrupt_csrs_save_y
tracksRegLiveness: true
body: |
  ; 6502-LABEL: name: interrupt_csrs_save_y
  ; 6502: bb.0.entry:
  ; 6502:   successors: %bb.1(0x80000000)
  ; 6502:   liveins: $a, $y, $rc30, $rc31, $rc32, $rc33, $rc34, $rc35
  ; 6502:   $c = LDCImm 0
  ; 6502:   PH $a
  ; 6502:   $a = COPY $rc0
  ; 6502:   $a, $c, $v = ADCImm $a, 254, $c
  ; 6502:   PH killed $a
  ; 6502:   $a = COPY $rc1
  ; 6502:   $a, $c, $v = ADCImm $a, 255, $c
  ; 6502:   $rc1 = COPY killed $a
  ; 6502:   $a = PL
  ; 6502:   $rc0 = COPY killed $a
  ; 6502:   $a = PL
  ; 6502:   KILL killed $p
  ; 6502:   frame-setup PH $a
  ; 6502:   $a = frame-setup COPY $y
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup COPY $rc30
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup COPY $rc31
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup COPY $rc32
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup COPY $rc33
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup LDAbs &__save_a
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = frame-setup LDAbs &__save_y
  ; 6502:   frame-setup PH killed $a
  ; 6502:   $a = COPY $rc34
  ; 6502:   $y = LDImm 1
  ; 6502:   STYIndir killed $a, $rs0, killed $y :: (store 1 into %stack.0)
  ; 6502:   $a = COPY $rc35
  ; 6502:   $y = LDImm 0
  ; 6502:   STYIndir killed $a, $rs0, killed $y :: (store 1 into %stack.1)
  ; 6502: bb.1.entry:
  ; 6502:   $rs15 = IMPLICIT_DEF
  ; 6502:   $rs16 = IMPLICIT_DEF
  ; 6502:   $rs17 = IMPLICIT_DEF
  ; 6502:   $y = LDImm 0
  ; 6502:   $a = LDYIndir $rs0, killed $y :: (load 1 from %stack.1)
  ; 6502:   $rc35 = COPY killed $a
  ; 6502:   $y = LDImm 1
  ; 6502:   $a = LDYIndir $rs0, killed $y :: (load 1 from %stack.0)
  ; 6502:   $rc34 = COPY killed $a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   frame-destroy STAbs killed $a, &__save_y
  ; 6502:   $a = frame-destroy PL
  ; 6502:   frame-destroy STAbs killed $a, &__save_a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   $rc33 = frame-destroy COPY killed $a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   $rc32 = frame-destroy COPY killed $a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   $rc31 = frame-destroy COPY killed $a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   $rc30 = frame-destroy COPY killed $a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   $y = frame-destroy COPY killed $a
  ; 6502:   $a = frame-destroy PL
  ; 6502:   PH $a
  ; 6502:   $c = LDCImm 0
  ; 6502:   $a = COPY $rc0
  ; 6502:   $a, $c, $v = ADCImm $a, 2, $c
  ; 6502:   $rc0 = COPY killed $a
  ; 6502:   $a = COPY $rc1
  ; 6502:   $a, $c, $v = ADCImm $a, 0, $c
  ; 6502:   $rc1 = COPY killed $a
  ; 6502:   $a = PL
  ; 6502:   RTI implicit $a, implicit $y, implicit $rc30, implicit $rc31, implicit $rc32, implicit $rc33, implicit $rc34, implicit $rc35
  ; 65C02-LABEL: name: interrupt_csrs_save_y
  ; 65C02: bb.0.entry:
  ; 65C02:   successors: %bb.1(0x80000000)
  ; 65C02:   liveins: $a, $y, $rc30, $rc31, $rc32, $rc33, $rc34, $rc35
  ; 65C02:   $c = LDCImm 0
  ; 65C02:   PH $a
  ; 65C02:   $a = COPY $rc0
  ; 65C02:   $a, $c, $v = ADCImm $a, 254, $c
  ; 65C02:   PH killed $a
  ; 65C02:   $a = COPY $rc1
  ; 65C02:   $a, $c, $v = ADCImm $a, 255, $c
  ; 65C02:   $rc1 = COPY killed $a
  ; 65C02:   $a = PL
  ; 65C02:   $rc0 = COPY killed $a
  ; 65C02:   $a = PL
  ; 65C02:   KILL killed $p
  ; 65C02:   frame-setup PH $a
  ; 65C02:   frame-setup PH $y
  ; 65C02:   $a = frame-setup COPY $rc30
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = frame-setup COPY $rc31
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = frame-setup COPY $rc32
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = frame-setup COPY $rc33
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = frame-setup LDAbs &__save_a
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = frame-setup LDAbs &__save_y
  ; 65C02:   frame-setup PH killed $a
  ; 65C02:   $a = COPY $rc34
  ; 65C02:   $y = LDImm 1
  ; 65C02:   STYIndir killed $a, $rs0, killed $y :: (store 1 into %stack.0)
  ; 65C02:   $a = COPY $rc35
  ; 65C02:   $y = LDImm 0
  ; 65C02:   STYIndir killed $a, $rs0, killed $y :: (store 1 into %stack.1)
  ; 65C02: bb.1.entry:
  ; 65C02:   $rs15 = IMPLICIT_DEF
  ; 65C02:   $rs16 = IMPLICIT_DEF
  ; 65C02:   $rs17 = IMPLICIT_DEF
  ; 65C02:   $y = LDImm 0
  ; 65C02:   $a = LDYIndir $rs0, killed $y :: (load 1 from %stack.1)
  ; 65C02:   $rc35 = COPY killed $a
  ; 65C02:   $y = LDImm 1
  ; 65C02:   $a = LDYIndir $rs0, killed $y :: (load 1 from %stack.0)
  ; 65C02:   $rc34 = COPY killed $a
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   frame-destroy STAbs killed $a, &__save_y
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   frame-destroy STAbs killed $a, &__save_a
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   $rc33 = frame-destroy COPY killed $a
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   $rc32 = frame-destroy COPY killed $a
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   $rc31 = frame-destroy COPY killed $a
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   $rc30 = frame-destroy COPY killed $a
  ; 65C02:   $y = frame-destroy PL
  ; 65C02:   $a = frame-destroy PL
  ; 65C02:   PH $a
  ; 65C02:   $c = LDCImm 0
  ; 65C02:   $a = COPY $rc0
  ; 65C02:   $a, $c, $v = ADCImm $a, 2, $c
  ; 65C02:   $rc0 = COPY killed $a
  ; 65C02:   $a = COPY $rc1
  ; 65C02:   $a, $c, $v = ADCImm $a, 0, $c
  ; 65C02:   $rc1 = COPY killed $a
  ; 65C02:   $a = PL
  ; 65C02:   RTI implicit $a, implicit $y, implicit $rc30, implicit $rc31, implicit $rc32, implicit $rc33, implicit $rc34, implicit $rc35
  bb.0.entry:
  bb.1.entry:
    $rs15 = IMPLICIT_DEF
    $rs16 = IMPLICIT_DEF
    $rs17 = IMPLICIT_DEF
    RTI
...
---
name: interrupt_caller
body: |
  bb.0.entry:
    ; 6502-LABEL: name: interrupt_caller
    ; 6502: frame-setup PH $a
    ; 6502: $a = frame-setup COPY $x
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $y
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc2
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc3
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc4
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc5
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc6
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc7
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc8
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc9
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc10
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc11
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc12
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc13
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc14
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc15
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc16
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc17
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc18
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc19
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc20
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc21
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc22
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc23
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc24
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc25
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc26
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc27
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc28
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup COPY $rc29
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup LDAbs &__save_a
    ; 6502: frame-setup PH killed $a
    ; 6502: $a = frame-setup LDAbs &__save_y
    ; 6502: frame-setup PH killed $a
    ; 6502: JSR &fn, mos_csr
    ; 6502: $a = frame-destroy PL
    ; 6502: frame-destroy STAbs killed $a, &__save_y
    ; 6502: $a = frame-destroy PL
    ; 6502: frame-destroy STAbs killed $a, &__save_a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc29 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc28 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc27 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc26 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc25 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc24 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc23 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc22 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc21 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc20 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc19 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc18 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc17 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc16 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc15 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc14 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc13 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc12 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc11 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc10 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc9 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc8 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc7 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc6 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc5 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc4 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc3 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $rc2 = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $y = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: $x = frame-destroy COPY killed $a
    ; 6502: $a = frame-destroy PL
    ; 6502: RTI implicit $a, implicit $x, implicit $y, implicit $rc2, implicit $rc3, implicit $rc4, implicit $rc5, implicit $rc6, implicit $rc7, implicit $rc8, implicit $rc9, implicit $rc10, implicit $rc11, implicit $rc12, implicit $rc13, implicit $rc14, implicit $rc15, implicit $rc16, implicit $rc17, implicit $rc18, implicit $rc19, implicit $rc20, implicit $rc21, implicit $rc22, implicit $rc23, implicit $rc24, implicit $rc25, implicit $rc26, implicit $rc27, implicit $rc28, implicit $rc29
    ; 65C02-LABEL: name: interrupt_caller
    ; 65C02: frame-setup PH $a
    ; 65C02: frame-setup PH $x
    ; 65C02: frame-setup PH $y
    ; 65C02: $a = frame-setup COPY $rc2
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc3
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc4
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc5
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc6
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc7
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc8
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc9
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc10
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc11
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc12
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc13
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc14
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc15
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc16
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc17
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc18
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc19
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc20
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc21
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc22
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc23
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc24
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc25
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc26
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc27
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc28
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup COPY $rc29
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup LDAbs &__save_a
    ; 65C02: frame-setup PH killed $a
    ; 65C02: $a = frame-setup LDAbs &__save_y
    ; 65C02: frame-setup PH killed $a
    ; 65C02: JSR &fn, mos_csr
    ; 65C02: $a = frame-destroy PL
    ; 65C02: frame-destroy STAbs killed $a, &__save_y
    ; 65C02: $a = frame-destroy PL
    ; 65C02: frame-destroy STAbs killed $a, &__save_a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc29 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc28 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc27 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc26 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc25 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc24 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc23 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc22 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc21 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc20 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc19 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc18 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc17 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc16 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc15 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc14 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc13 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc12 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc11 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc10 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc9 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc8 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc7 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc6 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc5 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc4 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc3 = frame-destroy COPY killed $a
    ; 65C02: $a = frame-destroy PL
    ; 65C02: $rc2 = frame-destroy COPY killed $a
    ; 65C02: $y = frame-destroy PL
    ; 65C02: $x = frame-destroy PL
    ; 65C02: $a = frame-destroy PL
    ; 65C02: RTI implicit $a, implicit $x, implicit $y, implicit $rc2, implicit $rc3, implicit $rc4, implicit $rc5, implicit $rc6, implicit $rc7, implicit $rc8, implicit $rc9, implicit $rc10, implicit $rc11, implicit $rc12, implicit $rc13, implicit $rc14, implicit $rc15, implicit $rc16, implicit $rc17, implicit $rc18, implicit $rc19, implicit $rc20, implicit $rc21, implicit $rc22, implicit $rc23, implicit $rc24, implicit $rc25, implicit $rc26, implicit $rc27, implicit $rc28, implicit $rc29
    ADJCALLSTACKDOWN 0, 0, implicit $rs0, implicit-def $rs0
    JSR &fn, mos_csr
    ADJCALLSTACKUP 0, 0, implicit $rs0, implicit-def $rs0
    RTI
...
