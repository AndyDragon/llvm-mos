; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s | FileCheck %s

target datalayout = "e-p:16:8-i16:8-i32:8-i64:8-f32:8-f64:8-a:8-Fi8-n8"
target triple = "mos"

define zeroext i1 @eq(i16 %a, i16 %b) {
; CHECK-LABEL: eq:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    bne .LBB0_3
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    cmp mos8(__rc2)
; CHECK-NEXT:    bne .LBB0_3
; CHECK-NEXT:  ; %bb.2: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB0_3: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
entry:
  %cmp = icmp eq i16 %a, %b
  ret i1 %cmp
}

define zeroext i1 @ne(i16 %a, i16 %b) {
; CHECK-LABEL: ne:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    bne .LBB1_3
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    cmp mos8(__rc2)
; CHECK-NEXT:    bne .LBB1_3
; CHECK-NEXT:  ; %bb.2: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB1_3: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
entry:
  %cmp = icmp ne i16 %a, %b
  ret i1 %cmp
}

define zeroext i1 @ule(i16 %a, i16 %b) {
; CHECK-LABEL: ule:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    stx mos8(__rc5)
; CHECK-NEXT:    ldx mos8(__rc3)
; CHECK-NEXT:    cpx mos8(__rc5)
; CHECK-NEXT:    bne .LBB2_3
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    sta mos8(__rc4)
; CHECK-NEXT:    lda mos8(__rc2)
; CHECK-NEXT:    cmp mos8(__rc4)
; CHECK-NEXT:    bcc .LBB2_4
; CHECK-NEXT:  .LBB2_2: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB2_3: ; %entry
; CHECK-NEXT:    cpx mos8(__rc5)
; CHECK-NEXT:    bcs .LBB2_2
; CHECK-NEXT:  .LBB2_4: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
entry:
  %cmp = icmp ule i16 %a, %b
  ret i1 %cmp
}

define zeroext i1 @ult(i16 %a, i16 %b) {
; CHECK-LABEL: ult:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    bne .LBB3_3
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    cmp mos8(__rc2)
; CHECK-NEXT:    bcc .LBB3_4
; CHECK-NEXT:  .LBB3_2: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB3_3: ; %entry
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    bcs .LBB3_2
; CHECK-NEXT:  .LBB3_4: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
entry:
  %cmp = icmp ult i16 %a, %b
  ret i1 %cmp
}

define zeroext i1 @uge(i16 %a, i16 %b) {
; CHECK-LABEL: uge:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    bne .LBB4_3
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    cmp mos8(__rc2)
; CHECK-NEXT:    bcc .LBB4_4
; CHECK-NEXT:  .LBB4_2: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB4_3: ; %entry
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    bcs .LBB4_2
; CHECK-NEXT:  .LBB4_4: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
entry:
  %cmp = icmp uge i16 %a, %b
  ret i1 %cmp
}

define zeroext i1 @ugt(i16 %a, i16 %b) {
; CHECK-LABEL: ugt:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    stx mos8(__rc5)
; CHECK-NEXT:    ldx mos8(__rc3)
; CHECK-NEXT:    cpx mos8(__rc5)
; CHECK-NEXT:    bne .LBB5_3
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    sta mos8(__rc4)
; CHECK-NEXT:    lda mos8(__rc2)
; CHECK-NEXT:    cmp mos8(__rc4)
; CHECK-NEXT:    bcc .LBB5_4
; CHECK-NEXT:  .LBB5_2: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB5_3: ; %entry
; CHECK-NEXT:    cpx mos8(__rc5)
; CHECK-NEXT:    bcs .LBB5_2
; CHECK-NEXT:  .LBB5_4: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
entry:
  %cmp = icmp ugt i16 %a, %b
  ret i1 %cmp
}

define zeroext i1 @sle(i16 %a, i16 %b) {
; CHECK-LABEL: sle:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    sta mos8(__rc4)
; CHECK-NEXT:    stx mos8(__rc5)
; CHECK-NEXT:    sec
; CHECK-NEXT:    lda mos8(__rc3)
; CHECK-NEXT:    sbc mos8(__rc5)
; CHECK-NEXT:    bmi .LBB6_2
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    ldy #0
; CHECK-NEXT:    jmp .LBB6_3
; CHECK-NEXT:  .LBB6_2: ; %entry
; CHECK-NEXT:    ldy #1
; CHECK-NEXT:  .LBB6_3: ; %entry
; CHECK-NEXT:    lda mos8(__rc3)
; CHECK-NEXT:    cmp mos8(__rc5)
; CHECK-NEXT:    bne .LBB6_6
; CHECK-NEXT:  ; %bb.4: ; %entry
; CHECK-NEXT:    ldx mos8(__rc2)
; CHECK-NEXT:    cpx mos8(__rc4)
; CHECK-NEXT:    bcc .LBB6_9
; CHECK-NEXT:  .LBB6_5: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB6_6: ; %entry
; CHECK-NEXT:    sty mos8(__rc2)
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    bvs .LBB6_8
; CHECK-NEXT:  ; %bb.7: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:  .LBB6_8: ; %entry
; CHECK-NEXT:    eor mos8(__rc2)
; CHECK-NEXT:    cmp #0
; CHECK-NEXT:    beq .LBB6_5
; CHECK-NEXT:  .LBB6_9: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
entry:
  %cmp = icmp sle i16 %a, %b
  ret i1 %cmp
}

define zeroext i1 @slt(i16 %a, i16 %b) {
; CHECK-LABEL: slt:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    sta mos8(__rc4)
; CHECK-NEXT:    sec
; CHECK-NEXT:    txa
; CHECK-NEXT:    sbc mos8(__rc3)
; CHECK-NEXT:    bmi .LBB7_6
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    ldy #0
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    beq .LBB7_7
; CHECK-NEXT:  .LBB7_2: ; %entry
; CHECK-NEXT:    sty mos8(__rc2)
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    bvs .LBB7_4
; CHECK-NEXT:  ; %bb.3: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:  .LBB7_4: ; %entry
; CHECK-NEXT:    eor mos8(__rc2)
; CHECK-NEXT:    cmp #0
; CHECK-NEXT:    bne .LBB7_8
; CHECK-NEXT:  .LBB7_5: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB7_6: ; %entry
; CHECK-NEXT:    ldy #1
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    bne .LBB7_2
; CHECK-NEXT:  .LBB7_7: ; %entry
; CHECK-NEXT:    lda mos8(__rc4)
; CHECK-NEXT:    cmp mos8(__rc2)
; CHECK-NEXT:    bcs .LBB7_5
; CHECK-NEXT:  .LBB7_8: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
entry:
  %cmp = icmp slt i16 %a, %b
  ret i1 %cmp
}

define zeroext i1 @sge(i16 %a, i16 %b) {
; CHECK-LABEL: sge:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    sta mos8(__rc4)
; CHECK-NEXT:    sec
; CHECK-NEXT:    txa
; CHECK-NEXT:    sbc mos8(__rc3)
; CHECK-NEXT:    bmi .LBB8_6
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    ldy #0
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    beq .LBB8_7
; CHECK-NEXT:  .LBB8_2: ; %entry
; CHECK-NEXT:    sty mos8(__rc2)
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    bvs .LBB8_4
; CHECK-NEXT:  ; %bb.3: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:  .LBB8_4: ; %entry
; CHECK-NEXT:    eor mos8(__rc2)
; CHECK-NEXT:    cmp #0
; CHECK-NEXT:    bne .LBB8_8
; CHECK-NEXT:  .LBB8_5: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB8_6: ; %entry
; CHECK-NEXT:    ldy #1
; CHECK-NEXT:    cpx mos8(__rc3)
; CHECK-NEXT:    bne .LBB8_2
; CHECK-NEXT:  .LBB8_7: ; %entry
; CHECK-NEXT:    lda mos8(__rc4)
; CHECK-NEXT:    cmp mos8(__rc2)
; CHECK-NEXT:    bcs .LBB8_5
; CHECK-NEXT:  .LBB8_8: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
entry:
  %cmp = icmp sge i16 %a, %b
  ret i1 %cmp
}

define zeroext i1 @sgt(i16 %a, i16 %b) {
; CHECK-LABEL: sgt:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    sta mos8(__rc4)
; CHECK-NEXT:    stx mos8(__rc5)
; CHECK-NEXT:    sec
; CHECK-NEXT:    lda mos8(__rc3)
; CHECK-NEXT:    sbc mos8(__rc5)
; CHECK-NEXT:    bmi .LBB9_2
; CHECK-NEXT:  ; %bb.1: ; %entry
; CHECK-NEXT:    ldy #0
; CHECK-NEXT:    jmp .LBB9_3
; CHECK-NEXT:  .LBB9_2: ; %entry
; CHECK-NEXT:    ldy #1
; CHECK-NEXT:  .LBB9_3: ; %entry
; CHECK-NEXT:    lda mos8(__rc3)
; CHECK-NEXT:    cmp mos8(__rc5)
; CHECK-NEXT:    bne .LBB9_6
; CHECK-NEXT:  ; %bb.4: ; %entry
; CHECK-NEXT:    ldx mos8(__rc2)
; CHECK-NEXT:    cpx mos8(__rc4)
; CHECK-NEXT:    bcc .LBB9_9
; CHECK-NEXT:  .LBB9_5: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB9_6: ; %entry
; CHECK-NEXT:    sty mos8(__rc2)
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    bvs .LBB9_8
; CHECK-NEXT:  ; %bb.7: ; %entry
; CHECK-NEXT:    lda #0
; CHECK-NEXT:  .LBB9_8: ; %entry
; CHECK-NEXT:    eor mos8(__rc2)
; CHECK-NEXT:    cmp #0
; CHECK-NEXT:    beq .LBB9_5
; CHECK-NEXT:  .LBB9_9: ; %entry
; CHECK-NEXT:    lda #1
; CHECK-NEXT:    rts
entry:
  %cmp = icmp sgt i16 %a, %b
  ret i1 %cmp
}
