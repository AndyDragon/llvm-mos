# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -run-pass=irtranslator -verify-machineinstrs -o - %s | FileCheck %s
--- |
  target triple = "mos"

  define void @inline_constraint_a() {
  ; CHECK-LABEL: name: inline_constraint_a
  entry:
  ; CHECK-LABEL: entry:
    call void asm sideeffect "JSR 1234", "a"(i8 56)
    ; CHECK:      %0:_(s8) = G_CONSTANT i8 56
    ; CHECK-NEXT: $a = COPY %0(s8)
    ; CHECK-NEXT: INLINEASM &"JSR 1234", 1 /* sideeffect attdialect */, 9 /* reguse */, $a
    ret void
    ; CHECK-NEXT: RTS
  }

  define void @inline_constraint_x() {
  ; CHECK-LABEL: name: inline_constraint_x
  entry:
  ; CHECK-LABEL: entry:
    call void asm sideeffect "JSR 1234", "x"(i8 56)
    ; CHECK:      %0:_(s8) = G_CONSTANT i8 56
    ; CHECK-NEXT: $x = COPY %0(s8)
    ; CHECK-NEXT: INLINEASM &"JSR 1234", 1 /* sideeffect attdialect */, 9 /* reguse */, $x
    ret void
    ; CHECK-NEXT: RTS
  }

  define void @inline_constraint_y() {
  ; CHECK-LABEL: name: inline_constraint_y
  entry:
  ; CHECK-LABEL: entry:
    call void asm sideeffect "JSR 1234", "y"(i8 56)
    ; CHECK:      %0:_(s8) = G_CONSTANT i8 56
    ; CHECK-NEXT: $y = COPY %0(s8)
    ; CHECK-NEXT: INLINEASM &"JSR 1234", 1 /* sideeffect attdialect */, 9 /* reguse */, $y
    ret void
    ; CHECK-NEXT: RTS
  }

  define void @clobber_cc() {
  ; CHECK-LABEL: name: clobber_cc
  entry:
  ; CHECK-LABEL: entry:
    call void asm sideeffect "", "~{cc}"()
    ; CHECK-NEXT: INLINEASM &"", 1 /* sideeffect attdialect */, 12 /* clobber */, implicit-def early-clobber $p
    ret void
    ; CHECK-NEXT: RTS
  }
...
