# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck %s -check-prefixes=6502
# RUN: llc -mtriple=mos -mcpu=mos65c02 -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck %s -check-prefixes=65C02
---
name: add
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: add
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 6502-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 6502-NEXT: %2:ac, dead %4:cc, dead %3:vc = ADCImag8 [[COPY]], [[COPY1]], [[LDCImm]]
    ; 6502-NEXT: RTS implicit %2
    ; 65C02-LABEL: name: add
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 65C02-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 65C02-NEXT: %2:ac, dead %4:cc, dead %3:vc = ADCImag8 [[COPY]], [[COPY1]], [[LDCImm]]
    ; 65C02-NEXT: RTS implicit %2
    %0:any(s8) = COPY $x
    %1:any(s8) = COPY $a
    %2:any(s8) = G_ADD %0, %1
    RTS implicit %2
...
---
name: add_imm
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: add_imm
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 6502-NEXT: %2:ac, dead %4:cc, dead %3:vc = ADCImm [[COPY]], 42, [[LDCImm]]
    ; 6502-NEXT: RTS implicit %2
    ; 65C02-LABEL: name: add_imm
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 65C02-NEXT: %2:ac, dead %4:cc, dead %3:vc = ADCImm [[COPY]], 42, [[LDCImm]]
    ; 65C02-NEXT: RTS implicit %2
    %0:any(s8) = COPY $x
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s8) = G_ADD %0, %1
    RTS implicit %2
...
---
name: add_abs
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: add_abs
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 6502-NEXT: [[ADCAbs:%[0-9]+]]:ac, [[ADCAbs1:%[0-9]+]]:cc, [[ADCAbs2:%[0-9]+]]:vc = ADCAbs [[COPY]], i16 1234, [[LDCImm]]
    ; 6502-NEXT: RTS implicit [[ADCAbs]]
    ; 65C02-LABEL: name: add_abs
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 65C02-NEXT: [[ADCAbs:%[0-9]+]]:ac, [[ADCAbs1:%[0-9]+]]:cc, [[ADCAbs2:%[0-9]+]]:vc = ADCAbs [[COPY]], i16 1234, [[LDCImm]]
    ; 65C02-NEXT: RTS implicit [[ADCAbs]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    %2:any(s8) = G_ADD %0, %1
    RTS implicit %2
...
---
name: add_abs_commute
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: add_abs_commute
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 6502-NEXT: [[ADCAbs:%[0-9]+]]:ac, [[ADCAbs1:%[0-9]+]]:cc, [[ADCAbs2:%[0-9]+]]:vc = ADCAbs [[COPY]], i16 1234, [[LDCImm]]
    ; 6502-NEXT: RTS implicit [[ADCAbs]]
    ; 65C02-LABEL: name: add_abs_commute
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 65C02-NEXT: [[ADCAbs:%[0-9]+]]:ac, [[ADCAbs1:%[0-9]+]]:cc, [[ADCAbs2:%[0-9]+]]:vc = ADCAbs [[COPY]], i16 1234, [[LDCImm]]
    ; 65C02-NEXT: RTS implicit [[ADCAbs]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    %2:any(s8) = G_ADD %1, %0
    RTS implicit %2
...
---
name: add_abs_direct_use
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: add_abs_direct_use
    ; 6502: [[COPY:%[0-9]+]]:imag8 = COPY $x
    ; 6502-NEXT: [[LDAbs:%[0-9]+]]:ac = LDAbs i16 1234 :: (load (s8))
    ; 6502-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 6502-NEXT: %2:ac, dead %4:cc, dead %3:vc = ADCImag8 [[LDAbs]], [[COPY]], [[LDCImm]]
    ; 6502-NEXT: RTS implicit [[LDAbs]], implicit %2
    ; 65C02-LABEL: name: add_abs_direct_use
    ; 65C02: [[COPY:%[0-9]+]]:imag8 = COPY $x
    ; 65C02-NEXT: [[LDAbs:%[0-9]+]]:ac = LDAbs i16 1234 :: (load (s8))
    ; 65C02-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 65C02-NEXT: %2:ac, dead %4:cc, dead %3:vc = ADCImag8 [[LDAbs]], [[COPY]], [[LDCImm]]
    ; 65C02-NEXT: RTS implicit [[LDAbs]], implicit %2
    %0:any(s8) = COPY $x
    %1:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    %2:any(s8) = G_ADD %1, %0
    RTS implicit %1, implicit %2
...
---
name: add_abs_across_store
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: add_abs_across_store
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[LDAbs:%[0-9]+]]:gpr = LDAbs i16 1234 :: (load (s8))
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY [[LDAbs]]
    ; 6502-NEXT: STAbs [[COPY]], i16 1234 :: (store (s8))
    ; 6502-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 6502-NEXT: %2:ac, dead %4:cc, dead %3:vc = ADCImag8 [[COPY]], [[COPY1]], [[LDCImm]]
    ; 6502-NEXT: RTS implicit %2
    ; 65C02-LABEL: name: add_abs_across_store
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[LDAbs:%[0-9]+]]:gpr = LDAbs i16 1234 :: (load (s8))
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY [[LDAbs]]
    ; 65C02-NEXT: STAbs [[COPY]], i16 1234 :: (store (s8))
    ; 65C02-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 65C02-NEXT: %2:ac, dead %4:cc, dead %3:vc = ADCImag8 [[COPY]], [[COPY1]], [[LDCImm]]
    ; 65C02-NEXT: RTS implicit %2
    %0:any(s8) = COPY $x
    %1:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    G_STORE_ABS %0, i16 1234 :: (store (s8))
    %3:any(s8) = G_ADD %0, %1
    RTS implicit %3
...
---
name: add_abs_one
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: add_abs_one
    ; 6502: [[LDAbs:%[0-9]+]]:gpr = LDAbs i16 1234 :: (load (s8))
    ; 6502-NEXT: [[INC:%[0-9]+]]:anyi8 = INC [[LDAbs]]
    ; 6502-NEXT: RTS implicit [[INC]]
    ; 65C02-LABEL: name: add_abs_one
    ; 65C02: [[LDAbs:%[0-9]+]]:gpr = LDAbs i16 1234 :: (load (s8))
    ; 65C02-NEXT: [[INC:%[0-9]+]]:anyi8 = INC [[LDAbs]]
    ; 65C02-NEXT: RTS implicit [[INC]]
    %0:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_ADD %0, %1
    RTS implicit %2
...
---
name: add_abs_idx
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: add_abs_idx
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:xy = COPY [[COPY]]
    ; 6502-NEXT: [[ADCIdx:%[0-9]+]]:ac, [[ADCIdx1:%[0-9]+]]:cc, [[ADCIdx2:%[0-9]+]]:vc = ADCIdx [[COPY]], i16 1234, [[COPY1]], [[LDCImm]]
    ; 6502-NEXT: RTS implicit [[ADCIdx]]
    ; 65C02-LABEL: name: add_abs_idx
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm 0
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:xy = COPY [[COPY]]
    ; 65C02-NEXT: [[ADCIdx:%[0-9]+]]:ac, [[ADCIdx1:%[0-9]+]]:cc, [[ADCIdx2:%[0-9]+]]:vc = ADCIdx [[COPY]], i16 1234, [[COPY1]], [[LDCImm]]
    ; 65C02-NEXT: RTS implicit [[ADCIdx]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_LOAD_ABS_IDX i16 1234, %0 :: (load (s8))
    %2:any(s8) = G_ADD %0, %1
    RTS implicit %2
...
---
name: inc_abs
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: inc_abs
    ; 6502: INCAbs i16 1234
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: inc_abs
    ; 65C02: INCAbs i16 1234
    ; 65C02-NEXT: RTS
    %0:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_ADD %0, %1
    G_STORE_ABS %2, i16 1234 :: (store (s8))
    RTS
...
---
name: inc_abs_across_store
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: inc_abs_across_store
    ; 6502: [[LDAbs:%[0-9]+]]:gpr = LDAbs i16 1234 :: (load (s8))
    ; 6502-NEXT: [[LDImm:%[0-9]+]]:gpr = LDImm 1
    ; 6502-NEXT: [[INC:%[0-9]+]]:gpr = INC [[LDAbs]]
    ; 6502-NEXT: STAbs [[LDImm]], i16 1234 :: (store (s8))
    ; 6502-NEXT: STAbs [[INC]], i16 1234 :: (store (s8))
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: inc_abs_across_store
    ; 65C02: [[LDAbs:%[0-9]+]]:gpr = LDAbs i16 1234 :: (load (s8))
    ; 65C02-NEXT: [[LDImm:%[0-9]+]]:gpr = LDImm 1
    ; 65C02-NEXT: [[INC:%[0-9]+]]:gpr = INC [[LDAbs]]
    ; 65C02-NEXT: STAbs [[LDImm]], i16 1234 :: (store (s8))
    ; 65C02-NEXT: STAbs [[INC]], i16 1234 :: (store (s8))
    ; 65C02-NEXT: RTS
    %0:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    %1:any(s8) = G_CONSTANT i8 1
    %2:any(s8) = G_ADD %0, %1
    G_STORE_ABS %1, i16 1234 :: (store (s8))
    G_STORE_ABS %2, i16 1234 :: (store (s8))
    RTS
...
---
name: sub
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sub
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 6502-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm -1
    ; 6502-NEXT: %2:ac, dead %4:cc, dead %3:vc = SBCImag8 [[COPY]], [[COPY1]], [[LDCImm]]
    ; 6502-NEXT: RTS implicit %2
    ; 65C02-LABEL: name: sub
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 65C02-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm -1
    ; 65C02-NEXT: %2:ac, dead %4:cc, dead %3:vc = SBCImag8 [[COPY]], [[COPY1]], [[LDCImm]]
    ; 65C02-NEXT: RTS implicit %2
    %0:any(s8) = COPY $x
    %1:any(s8) = COPY $a
    %2:any(s8) = G_SUB %0, %1
    RTS implicit %2
...
---
name: sub_imm
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sub_imm
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm -1
    ; 6502-NEXT: %2:ac, dead %4:cc, dead %3:vc = SBCImm [[COPY]], 42, [[LDCImm]]
    ; 6502-NEXT: RTS implicit %2
    ; 65C02-LABEL: name: sub_imm
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[LDCImm:%[0-9]+]]:cc = LDCImm -1
    ; 65C02-NEXT: %2:ac, dead %4:cc, dead %3:vc = SBCImm [[COPY]], 42, [[LDCImm]]
    ; 65C02-NEXT: RTS implicit %2
    %0:any(s8) = COPY $x
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s8) = G_SUB %0, %1
    RTS implicit %2
...
---
name: and
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: and
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 6502-NEXT: [[ANDImag8_:%[0-9]+]]:ac = ANDImag8 [[COPY]], [[COPY1]]
    ; 6502-NEXT: RTS implicit [[ANDImag8_]]
    ; 65C02-LABEL: name: and
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 65C02-NEXT: [[ANDImag8_:%[0-9]+]]:ac = ANDImag8 [[COPY]], [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[ANDImag8_]]
    %0:any(s8) = COPY $x
    %1:any(s8) = COPY $a
    %2:any(s8) = G_AND %0, %1
    RTS implicit %2
...
---
name: asl
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: asl
    ; 6502: [[COPY:%[0-9]+]]:aimag8 = COPY $a
    ; 6502-NEXT: [[ASL:%[0-9]+]]:aimag8, [[ASL1:%[0-9]+]]:cc = ASL [[COPY]]
    ; 6502-NEXT: RTS implicit [[ASL]], implicit [[ASL1]]
    ; 65C02-LABEL: name: asl
    ; 65C02: [[COPY:%[0-9]+]]:aimag8 = COPY $a
    ; 65C02-NEXT: [[ASL:%[0-9]+]]:aimag8, [[ASL1:%[0-9]+]]:cc = ASL [[COPY]]
    ; 65C02-NEXT: RTS implicit [[ASL]], implicit [[ASL1]]
    %0:any(s8) = COPY $a
    %1:any(s1) = G_CONSTANT i1 0
    %2:any(s8), %3:any(s1) = G_SHLE %0, %1
    RTS implicit %2, implicit %3
...
---
name: anyext_8_1
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: anyext_8_1
    ; 6502: [[COPY:%[0-9]+]]:anyi1 = COPY $c
    ; 6502-NEXT: [[DEF:%[0-9]+]]:anyi8 = IMPLICIT_DEF
    ; 6502-NEXT: [[INSERT_SUBREG:%[0-9]+]]:anyi8 = INSERT_SUBREG [[DEF]], [[COPY]], %subreg.sublsb
    ; 6502-NEXT: RTS implicit [[INSERT_SUBREG]]
    ; 65C02-LABEL: name: anyext_8_1
    ; 65C02: [[COPY:%[0-9]+]]:anyi1 = COPY $c
    ; 65C02-NEXT: [[DEF:%[0-9]+]]:anyi8 = IMPLICIT_DEF
    ; 65C02-NEXT: [[INSERT_SUBREG:%[0-9]+]]:anyi8 = INSERT_SUBREG [[DEF]], [[COPY]], %subreg.sublsb
    ; 65C02-NEXT: RTS implicit [[INSERT_SUBREG]]
    %0:any(s1) = COPY $c
    %1:any(s8) = G_ANYEXT %0
    RTS implicit %1
...
---
name: anyext_16_8
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: anyext_16_8
    ; 6502: [[COPY:%[0-9]+]]:anyi8 = COPY $a
    ; 6502-NEXT: [[DEF:%[0-9]+]]:imag16 = IMPLICIT_DEF
    ; 6502-NEXT: [[INSERT_SUBREG:%[0-9]+]]:imag16 = INSERT_SUBREG [[DEF]], [[COPY]], %subreg.sublo
    ; 6502-NEXT: RTS implicit [[INSERT_SUBREG]]
    ; 65C02-LABEL: name: anyext_16_8
    ; 65C02: [[COPY:%[0-9]+]]:anyi8 = COPY $a
    ; 65C02-NEXT: [[DEF:%[0-9]+]]:imag16 = IMPLICIT_DEF
    ; 65C02-NEXT: [[INSERT_SUBREG:%[0-9]+]]:imag16 = INSERT_SUBREG [[DEF]], [[COPY]], %subreg.sublo
    ; 65C02-NEXT: RTS implicit [[INSERT_SUBREG]]
    %0:any(s8) = COPY $a
    %1:any(s16) = G_ANYEXT %0
    RTS implicit %1
...
---
name: anyext_16_1
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: anyext_16_1
    ; 6502: [[COPY:%[0-9]+]]:anyi1 = COPY $c
    ; 6502-NEXT: [[DEF:%[0-9]+]]:anyi8 = IMPLICIT_DEF
    ; 6502-NEXT: [[INSERT_SUBREG:%[0-9]+]]:anyi8 = INSERT_SUBREG [[DEF]], [[COPY]], %subreg.sublsb
    ; 6502-NEXT: [[DEF1:%[0-9]+]]:imag16 = IMPLICIT_DEF
    ; 6502-NEXT: [[INSERT_SUBREG1:%[0-9]+]]:imag16 = INSERT_SUBREG [[DEF1]], [[INSERT_SUBREG]], %subreg.sublo
    ; 6502-NEXT: RTS implicit [[INSERT_SUBREG1]]
    ; 65C02-LABEL: name: anyext_16_1
    ; 65C02: [[COPY:%[0-9]+]]:anyi1 = COPY $c
    ; 65C02-NEXT: [[DEF:%[0-9]+]]:anyi8 = IMPLICIT_DEF
    ; 65C02-NEXT: [[INSERT_SUBREG:%[0-9]+]]:anyi8 = INSERT_SUBREG [[DEF]], [[COPY]], %subreg.sublsb
    ; 65C02-NEXT: [[DEF1:%[0-9]+]]:imag16 = IMPLICIT_DEF
    ; 65C02-NEXT: [[INSERT_SUBREG1:%[0-9]+]]:imag16 = INSERT_SUBREG [[DEF1]], [[INSERT_SUBREG]], %subreg.sublo
    ; 65C02-NEXT: RTS implicit [[INSERT_SUBREG1]]
    %0:any(s1) = COPY $c
    %1:any(s16) = G_ANYEXT %0
    RTS implicit %1
...
---
name: br
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: br
    ; 6502: successors: %bb.0(0x80000000)
    ; 6502-NEXT: {{  $}}
    ; 6502-NEXT: JMP %bb.0
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: br
    ; 65C02: successors: %bb.0(0x80000000)
    ; 65C02-NEXT: {{  $}}
    ; 65C02-NEXT: BRA %bb.0
    ; 65C02-NEXT: RTS
    G_BR %bb.0
    RTS
...
---
name: br_imm
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: br_imm
    ; 6502: successors: %bb.0(0x80000000)
    ; 6502-NEXT: {{  $}}
    ; 6502-NEXT: [[COPY:%[0-9]+]]:anyi1 = COPY $c
    ; 6502-NEXT: GBR %bb.0, [[COPY]], 0, implicit-def $c
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: br_imm
    ; 65C02: successors: %bb.0(0x80000000)
    ; 65C02-NEXT: {{  $}}
    ; 65C02-NEXT: [[COPY:%[0-9]+]]:anyi1 = COPY $c
    ; 65C02-NEXT: GBR %bb.0, [[COPY]], 0, implicit-def $c
    ; 65C02-NEXT: RTS
    %0:any(s1) = COPY $c
    G_BRCOND_IMM %0, %bb.0, 0
    RTS
...
---
name: cmpz_brn
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpz_brn
    ; 6502: successors: %bb.0(0x80000000)
    ; 6502-NEXT: {{  $}}
    ; 6502-NEXT: [[COPY:%[0-9]+]]:anyi8 = COPY $a
    ; 6502-NEXT: [[CMPZTerm:%[0-9]+]]:cc = CMPZTerm [[COPY]], implicit-def $nz
    ; 6502-NEXT: BR %bb.0, $n, 1
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: cmpz_brn
    ; 65C02: successors: %bb.0(0x80000000)
    ; 65C02-NEXT: {{  $}}
    ; 65C02-NEXT: [[COPY:%[0-9]+]]:anyi8 = COPY $a
    ; 65C02-NEXT: [[CMPZTerm:%[0-9]+]]:cc = CMPZTerm [[COPY]], implicit-def $nz
    ; 65C02-NEXT: BR %bb.0, $n, 1
    ; 65C02-NEXT: RTS
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 0
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    G_BRCOND_IMM %5, %bb.0, 1
    RTS
...
---
name: cmpz_brz
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpz_brz
    ; 6502: successors: %bb.0(0x80000000)
    ; 6502-NEXT: {{  $}}
    ; 6502-NEXT: [[COPY:%[0-9]+]]:anyi8 = COPY $a
    ; 6502-NEXT: [[CMPZTerm:%[0-9]+]]:cc = CMPZTerm [[COPY]], implicit-def $nz
    ; 6502-NEXT: BR %bb.0, $z, 1
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: cmpz_brz
    ; 65C02: successors: %bb.0(0x80000000)
    ; 65C02-NEXT: {{  $}}
    ; 65C02-NEXT: [[COPY:%[0-9]+]]:anyi8 = COPY $a
    ; 65C02-NEXT: [[CMPZTerm:%[0-9]+]]:cc = CMPZTerm [[COPY]], implicit-def $nz
    ; 65C02-NEXT: BR %bb.0, $z, 1
    ; 65C02-NEXT: RTS
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 0
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    G_BRCOND_IMM %7, %bb.0, 1
    RTS
...
---
name: cmpimm_brc
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpimm_brc
    ; 6502: successors: %bb.0(0x80000000)
    ; 6502-NEXT: {{  $}}
    ; 6502-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 6502-NEXT: [[CMPImm:%[0-9]+]]:cc = CMPImm [[COPY]], 42
    ; 6502-NEXT: GBR %bb.0, [[CMPImm]], 1, implicit-def $c
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: cmpimm_brc
    ; 65C02: successors: %bb.0(0x80000000)
    ; 65C02-NEXT: {{  $}}
    ; 65C02-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 65C02-NEXT: [[CMPImm:%[0-9]+]]:cc = CMPImm [[COPY]], 42
    ; 65C02-NEXT: GBR %bb.0, [[CMPImm]], 1, implicit-def $c
    ; 65C02-NEXT: RTS
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    G_BRCOND_IMM %4, %bb.0, 1
    RTS
...
---
name: cmpimm_brn
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpimm_brn
    ; 6502: successors: %bb.0(0x80000000)
    ; 6502-NEXT: {{  $}}
    ; 6502-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 6502-NEXT: [[CMPImmTerm:%[0-9]+]]:cc = CMPImmTerm [[COPY]], 42, implicit-def $nz
    ; 6502-NEXT: BR %bb.0, $n, 1
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: cmpimm_brn
    ; 65C02: successors: %bb.0(0x80000000)
    ; 65C02-NEXT: {{  $}}
    ; 65C02-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 65C02-NEXT: [[CMPImmTerm:%[0-9]+]]:cc = CMPImmTerm [[COPY]], 42, implicit-def $nz
    ; 65C02-NEXT: BR %bb.0, $n, 1
    ; 65C02-NEXT: RTS
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    G_BRCOND_IMM %5, %bb.0, 1
    RTS
...
---
name: cmpimm_brz
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpimm_brz
    ; 6502: successors: %bb.0(0x80000000)
    ; 6502-NEXT: {{  $}}
    ; 6502-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 6502-NEXT: [[CMPImmTerm:%[0-9]+]]:cc = CMPImmTerm [[COPY]], 42, implicit-def $nz
    ; 6502-NEXT: BR %bb.0, $z, 1
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: cmpimm_brz
    ; 65C02: successors: %bb.0(0x80000000)
    ; 65C02-NEXT: {{  $}}
    ; 65C02-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 65C02-NEXT: [[CMPImmTerm:%[0-9]+]]:cc = CMPImmTerm [[COPY]], 42, implicit-def $nz
    ; 65C02-NEXT: BR %bb.0, $z, 1
    ; 65C02-NEXT: RTS
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    G_BRCOND_IMM %7, %bb.0, 1
    RTS
...
---
name: cmpimag8_brc
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpimag8_brc
    ; 6502: successors: %bb.0(0x80000000)
    ; 6502-NEXT: {{  $}}
    ; 6502-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 6502-NEXT: [[CMPImag8_:%[0-9]+]]:cc = CMPImag8 [[COPY]], [[COPY1]]
    ; 6502-NEXT: GBR %bb.0, [[CMPImag8_]], 1, implicit-def $c
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: cmpimag8_brc
    ; 65C02: successors: %bb.0(0x80000000)
    ; 65C02-NEXT: {{  $}}
    ; 65C02-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 65C02-NEXT: [[CMPImag8_:%[0-9]+]]:cc = CMPImag8 [[COPY]], [[COPY1]]
    ; 65C02-NEXT: GBR %bb.0, [[CMPImag8_]], 1, implicit-def $c
    ; 65C02-NEXT: RTS
    %0:any(s8) = COPY $a
    %1:any(s8) = COPY $x
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    G_BRCOND_IMM %4, %bb.0, 1
    RTS
...
---
name: cmpimm_n
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpimm_n
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: %4:cc, %5:gpr_lsb, $noreg = CMPNZImm [[COPY]], 42
    ; 6502-NEXT: RTS implicit %5
    ; 65C02-LABEL: name: cmpimm_n
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: %4:cc, %5:gpr_lsb, $noreg = CMPNZImm [[COPY]], 42
    ; 65C02-NEXT: RTS implicit %5
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    RTS implicit %5
...
---
name: cmpimm_z
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpimm_z
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: %4:cc, $noreg, %7:gpr_lsb = CMPNZImm [[COPY]], 42
    ; 6502-NEXT: RTS implicit %7
    ; 65C02-LABEL: name: cmpimm_z
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: %4:cc, $noreg, %7:gpr_lsb = CMPNZImm [[COPY]], 42
    ; 65C02-NEXT: RTS implicit %7
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    RTS implicit %7
...
---
name: cmpimm_nz
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpimm_nz
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: %4:cc, %5:gpr_lsb, $noreg = CMPNZImm [[COPY]], 42
    ; 6502-NEXT: %10:cc, $noreg, %7:gpr_lsb = CMPNZImm [[COPY]], 42
    ; 6502-NEXT: RTS implicit %5, implicit %7
    ; 65C02-LABEL: name: cmpimm_nz
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: %4:cc, %5:gpr_lsb, $noreg = CMPNZImm [[COPY]], 42
    ; 65C02-NEXT: %10:cc, $noreg, %7:gpr_lsb = CMPNZImm [[COPY]], 42
    ; 65C02-NEXT: RTS implicit %5, implicit %7
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    RTS implicit %5, implicit %7
...
---
name: cmpimag8_n
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpimag8_n
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 6502-NEXT: %4:cc, %5:gpr_lsb, $noreg = CMPNZImag8 [[COPY]], [[COPY1]]
    ; 6502-NEXT: RTS implicit %5
    ; 65C02-LABEL: name: cmpimag8_n
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 65C02-NEXT: %4:cc, %5:gpr_lsb, $noreg = CMPNZImag8 [[COPY]], [[COPY1]]
    ; 65C02-NEXT: RTS implicit %5
    %0:any(s8) = COPY $a
    %1:any(s8) = COPY $x
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    RTS implicit %5
...
---
name: cmpimag8_z
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: cmpimag8_z
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 6502-NEXT: %4:cc, $noreg, %7:gpr_lsb = CMPNZImag8 [[COPY]], [[COPY1]]
    ; 6502-NEXT: RTS implicit %7
    ; 65C02-LABEL: name: cmpimag8_z
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 65C02-NEXT: %4:cc, $noreg, %7:gpr_lsb = CMPNZImag8 [[COPY]], [[COPY1]]
    ; 65C02-NEXT: RTS implicit %7
    %0:any(s8) = COPY $a
    %1:any(s8) = COPY $x
    %2:any(s1) = G_CONSTANT i1 -1
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    RTS implicit %7
...
---
name: sbcimm_n
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sbcimm_n
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: [[LDImm1_:%[0-9]+]]:cc = LDImm1 0
    ; 6502-NEXT: %3:ac, %4:cc, %5:gpr_lsb, %6:vc, $noreg = SBCNZImm [[COPY]], 42, [[LDImm1_]]
    ; 6502-NEXT: RTS implicit %5
    ; 65C02-LABEL: name: sbcimm_n
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: [[LDImm1_:%[0-9]+]]:cc = LDImm1 0
    ; 65C02-NEXT: %3:ac, %4:cc, %5:gpr_lsb, %6:vc, $noreg = SBCNZImm [[COPY]], 42, [[LDImm1_]]
    ; 65C02-NEXT: RTS implicit %5
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = G_CONSTANT i1 0
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    RTS implicit %5
...
---
name: sbcimm_z
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sbcimm_z
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: [[LDImm1_:%[0-9]+]]:cc = LDImm1 0
    ; 6502-NEXT: %3:ac, %4:cc, $noreg, %6:vc, %7:gpr_lsb = SBCNZImm [[COPY]], 42, [[LDImm1_]]
    ; 6502-NEXT: RTS implicit %7
    ; 65C02-LABEL: name: sbcimm_z
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: [[LDImm1_:%[0-9]+]]:cc = LDImm1 0
    ; 65C02-NEXT: %3:ac, %4:cc, $noreg, %6:vc, %7:gpr_lsb = SBCNZImm [[COPY]], 42, [[LDImm1_]]
    ; 65C02-NEXT: RTS implicit %7
    %0:any(s8) = COPY $a
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = G_CONSTANT i1 0
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    RTS implicit %7
...
---
name: sbcimag8_n
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sbcimag8_n
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 6502-NEXT: [[LDImm1_:%[0-9]+]]:cc = LDImm1 0
    ; 6502-NEXT: %3:ac, %4:cc, %5:gpr_lsb, %6:vc, $noreg = SBCNZImag8 [[COPY]], [[COPY1]], [[LDImm1_]]
    ; 6502-NEXT: RTS implicit %5
    ; 65C02-LABEL: name: sbcimag8_n
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 65C02-NEXT: [[LDImm1_:%[0-9]+]]:cc = LDImm1 0
    ; 65C02-NEXT: %3:ac, %4:cc, %5:gpr_lsb, %6:vc, $noreg = SBCNZImag8 [[COPY]], [[COPY1]], [[LDImm1_]]
    ; 65C02-NEXT: RTS implicit %5
    %0:any(s8) = COPY $a
    %1:any(s8) = COPY $x
    %2:any(s1) = G_CONSTANT i1 0
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    RTS implicit %5
...
---
name: sbcimag8_z
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sbcimag8_z
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 6502-NEXT: [[LDImm1_:%[0-9]+]]:cc = LDImm1 0
    ; 6502-NEXT: %3:ac, %4:cc, $noreg, %6:vc, %7:gpr_lsb = SBCNZImag8 [[COPY]], [[COPY1]], [[LDImm1_]]
    ; 6502-NEXT: RTS implicit %7
    ; 65C02-LABEL: name: sbcimag8_z
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $x
    ; 65C02-NEXT: [[LDImm1_:%[0-9]+]]:cc = LDImm1 0
    ; 65C02-NEXT: %3:ac, %4:cc, $noreg, %6:vc, %7:gpr_lsb = SBCNZImag8 [[COPY]], [[COPY1]], [[LDImm1_]]
    ; 65C02-NEXT: RTS implicit %7
    %0:any(s8) = COPY $a
    %1:any(s8) = COPY $x
    %2:any(s1) = G_CONSTANT i1 0
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0, %1, %2
    RTS implicit %7
...
---
name: copy
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    liveins: $a
    ; 6502-LABEL: name: copy
    ; 6502: [[COPY:%[0-9]+]]:anyi8 = COPY $a
    ; 6502-NEXT: RTS implicit [[COPY]]
    ; 65C02-LABEL: name: copy
    ; 65C02: [[COPY:%[0-9]+]]:anyi8 = COPY $a
    ; 65C02-NEXT: RTS implicit [[COPY]]
    %0:any(s8) = COPY $a
    RTS implicit %0
...
---
name: eor
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: eor
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 6502-NEXT: [[EORImag8_:%[0-9]+]]:ac = EORImag8 [[COPY]], [[COPY1]]
    ; 6502-NEXT: RTS implicit [[EORImag8_]]
    ; 65C02-LABEL: name: eor
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 65C02-NEXT: [[EORImag8_:%[0-9]+]]:ac = EORImag8 [[COPY]], [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[EORImag8_]]
    %0:any(s8) = COPY $x
    %1:any(s8) = COPY $a
    %2:any(s8) = G_XOR %0, %1
    RTS implicit %2
...
---
name: implicit_def
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: implicit_def
    ; 6502: [[DEF:%[0-9]+]]:anyi1 = IMPLICIT_DEF
    ; 6502-NEXT: RTS implicit [[DEF]]
    ; 65C02-LABEL: name: implicit_def
    ; 65C02: [[DEF:%[0-9]+]]:anyi1 = IMPLICIT_DEF
    ; 65C02-NEXT: RTS implicit [[DEF]]
    %0:any(s1) = G_IMPLICIT_DEF
    RTS implicit %0
...
---
name: ldimm1
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: ldimm1
    ; 6502: [[LDImm1_:%[0-9]+]]:cv_gpr_lsb = LDImm1 -1
    ; 6502-NEXT: RTS implicit [[LDImm1_]]
    ; 65C02-LABEL: name: ldimm1
    ; 65C02: [[LDImm1_:%[0-9]+]]:cv_gpr_lsb = LDImm1 -1
    ; 65C02-NEXT: RTS implicit [[LDImm1_]]
    %0:any(s1) = G_CONSTANT i1 true
    RTS implicit %0
...
---
name: ldimm
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: ldimm
    ; 6502: [[LDImm:%[0-9]+]]:gpr = LDImm 42
    ; 6502-NEXT: RTS implicit [[LDImm]]
    ; 65C02-LABEL: name: ldimm
    ; 65C02: [[LDImm:%[0-9]+]]:gpr = LDImm 42
    ; 65C02-NEXT: RTS implicit [[LDImm]]
    %0:any(s8) = G_CONSTANT i8 42
    RTS implicit %0
...
---
name: load_absolute_const
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: load_absolute_const
    ; 6502: [[LDAbs:%[0-9]+]]:gpr = LDAbs i16 1234 :: (load (s8))
    ; 6502-NEXT: RTS implicit [[LDAbs]]
    ; 65C02-LABEL: name: load_absolute_const
    ; 65C02: [[LDAbs:%[0-9]+]]:gpr = LDAbs i16 1234 :: (load (s8))
    ; 65C02-NEXT: RTS implicit [[LDAbs]]
    %0:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    RTS implicit %0
...
---
name: store
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: store
    ; 6502: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 6502-NEXT: STAbs [[COPY]], i16 1234 :: (store (s8))
    ; 6502-NEXT: RTS
    ; 65C02-LABEL: name: store
    ; 65C02: [[COPY:%[0-9]+]]:gpr = COPY $a
    ; 65C02-NEXT: STAbs [[COPY]], i16 1234 :: (store (s8))
    ; 65C02-NEXT: RTS
    %0:any(s8) = COPY $a
    G_STORE_ABS %0, i16 1234 :: (store (s8))
    RTS
...
---
name: load_absolute_indexed
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: load_absolute_indexed
    ; 6502: [[COPY:%[0-9]+]]:xy = COPY $x
    ; 6502-NEXT: [[LDIdx:%[0-9]+]]:gpr = LDIdx i16 1234, [[COPY]] :: (load (s8))
    ; 6502-NEXT: RTS implicit [[LDIdx]]
    ; 65C02-LABEL: name: load_absolute_indexed
    ; 65C02: [[COPY:%[0-9]+]]:xy = COPY $x
    ; 65C02-NEXT: [[LDIdx:%[0-9]+]]:gpr = LDIdx i16 1234, [[COPY]] :: (load (s8))
    ; 65C02-NEXT: RTS implicit [[LDIdx]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_LOAD_ABS_IDX i16 1234, %0 :: (load (s8))
    RTS implicit %1
...
---
name: load_indirect_indexed
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: load_indirect_indexed
    ; 6502: [[COPY:%[0-9]+]]:imag16 = COPY $rs1
    ; 6502-NEXT: [[LDImm:%[0-9]+]]:yc = LDImm -1
    ; 6502-NEXT: [[LDYIndir:%[0-9]+]]:ac = LDYIndir [[COPY]], [[LDImm]] :: (load (s8))
    ; 6502-NEXT: RTS implicit [[LDYIndir]]
    ; 65C02-LABEL: name: load_indirect_indexed
    ; 65C02: [[COPY:%[0-9]+]]:imag16 = COPY $rs1
    ; 65C02-NEXT: [[LDImm:%[0-9]+]]:yc = LDImm -1
    ; 65C02-NEXT: [[LDYIndir:%[0-9]+]]:ac = LDYIndir [[COPY]], [[LDImm]] :: (load (s8))
    ; 65C02-NEXT: RTS implicit [[LDYIndir]]
    %0:any(p0) = COPY $rs1
    %1:any(s8) = G_CONSTANT i8 -1
    %2:any(s8) = G_LOAD_INDIR_IDX %0, %1 :: (load (s8))
    RTS implicit %2
...
---
name: lsr
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: lsr
    ; 6502: [[COPY:%[0-9]+]]:aimag8 = COPY $a
    ; 6502-NEXT: [[LSR:%[0-9]+]]:aimag8, [[LSR1:%[0-9]+]]:cc = LSR [[COPY]]
    ; 6502-NEXT: RTS implicit [[LSR]], implicit [[LSR1]]
    ; 65C02-LABEL: name: lsr
    ; 65C02: [[COPY:%[0-9]+]]:aimag8 = COPY $a
    ; 65C02-NEXT: [[LSR:%[0-9]+]]:aimag8, [[LSR1:%[0-9]+]]:cc = LSR [[COPY]]
    ; 65C02-NEXT: RTS implicit [[LSR]], implicit [[LSR1]]
    %0:any(s8) = COPY $a
    %1:any(s1) = G_CONSTANT i1 0
    %2:any(s8), %3:any(s1) = G_LSHRE %0, %1
    RTS implicit %2, implicit %3
...
---
name: ora
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: ora
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 6502-NEXT: [[ORAImag8_:%[0-9]+]]:ac = ORAImag8 [[COPY]], [[COPY1]]
    ; 6502-NEXT: RTS implicit [[ORAImag8_]]
    ; 65C02-LABEL: name: ora
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 65C02-NEXT: [[ORAImag8_:%[0-9]+]]:ac = ORAImag8 [[COPY]], [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[ORAImag8_]]
    %0:any(s8) = COPY $x
    %1:any(s8) = COPY $a
    %2:any(s8) = G_OR %0, %1
    RTS implicit %2
...
---
name: rol
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: rol
    ; 6502: [[COPY:%[0-9]+]]:aimag8 = COPY $a
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[ROL:%[0-9]+]]:aimag8, [[ROL1:%[0-9]+]]:cc = ROL [[COPY]], [[COPY1]]
    ; 6502-NEXT: RTS implicit [[ROL]], implicit [[ROL1]]
    ; 65C02-LABEL: name: rol
    ; 65C02: [[COPY:%[0-9]+]]:aimag8 = COPY $a
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[ROL:%[0-9]+]]:aimag8, [[ROL1:%[0-9]+]]:cc = ROL [[COPY]], [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[ROL]], implicit [[ROL1]]
    %0:any(s8) = COPY $a
    %1:any(s1) = COPY $v
    %2:any(s8), %3:any(s1) = G_SHLE %0, %1
    RTS implicit %2, implicit %3
...
---
name: ror
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: ror
    ; 6502: [[COPY:%[0-9]+]]:aimag8 = COPY $a
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[ROR:%[0-9]+]]:aimag8, [[ROR1:%[0-9]+]]:cc = ROR [[COPY]], [[COPY1]]
    ; 6502-NEXT: RTS implicit [[ROR]], implicit [[ROR1]]
    ; 65C02-LABEL: name: ror
    ; 65C02: [[COPY:%[0-9]+]]:aimag8 = COPY $a
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[ROR:%[0-9]+]]:aimag8, [[ROR1:%[0-9]+]]:cc = ROR [[COPY]], [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[ROR]], implicit [[ROR1]]
    %0:any(s8) = COPY $a
    %1:any(s1) = COPY $v
    %2:any(s8), %3:any(s1) = G_LSHRE %0, %1
    RTS implicit %2, implicit %3
...
---
name: trunc_8_1
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: trunc_8_1
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 6502-NEXT: [[ANDImm:%[0-9]+]]:ac = ANDImm [[COPY]], 1
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:gpr_lsb = COPY [[ANDImm]].sublsb
    ; 6502-NEXT: RTS implicit [[COPY1]]
    ; 65C02-LABEL: name: trunc_8_1
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $a
    ; 65C02-NEXT: [[ANDImm:%[0-9]+]]:ac = ANDImm [[COPY]], 1
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:gpr_lsb = COPY [[ANDImm]].sublsb
    ; 65C02-NEXT: RTS implicit [[COPY1]]
    %0:any(s8) = COPY $a
    %1:any(s1) = G_TRUNC %0
    RTS implicit %1
...
---
name: trunc_16_8
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: trunc_16_8
    ; 6502: [[COPY:%[0-9]+]]:imag16 = COPY $rs1
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY [[COPY]].sublo
    ; 6502-NEXT: RTS implicit [[COPY1]]
    ; 65C02-LABEL: name: trunc_16_8
    ; 65C02: [[COPY:%[0-9]+]]:imag16 = COPY $rs1
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY [[COPY]].sublo
    ; 65C02-NEXT: RTS implicit [[COPY1]]
    %0:any(s16) = COPY $rs1
    %1:any(s8) = G_TRUNC %0
    RTS implicit %1
...
---
name: trunc_16_1
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: trunc_16_1
    ; 6502: [[COPY:%[0-9]+]]:imag16 = COPY $rs1
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY [[COPY]].sublo
    ; 6502-NEXT: [[COPY2:%[0-9]+]]:ac = COPY [[COPY1]]
    ; 6502-NEXT: [[ANDImm:%[0-9]+]]:ac = ANDImm [[COPY2]], 1
    ; 6502-NEXT: [[COPY3:%[0-9]+]]:gpr_lsb = COPY [[ANDImm]].sublsb
    ; 6502-NEXT: RTS implicit [[COPY3]]
    ; 65C02-LABEL: name: trunc_16_1
    ; 65C02: [[COPY:%[0-9]+]]:imag16 = COPY $rs1
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY [[COPY]].sublo
    ; 65C02-NEXT: [[COPY2:%[0-9]+]]:ac = COPY [[COPY1]]
    ; 65C02-NEXT: [[ANDImm:%[0-9]+]]:ac = ANDImm [[COPY2]], 1
    ; 65C02-NEXT: [[COPY3:%[0-9]+]]:gpr_lsb = COPY [[ANDImm]].sublsb
    ; 65C02-NEXT: RTS implicit [[COPY3]]
    %0:any(s16) = COPY $rs1
    %1:any(s1) = G_TRUNC %0
    RTS implicit %1
...
---
name: uadde_imm
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: uadde_imm
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[ADCImm:%[0-9]+]]:ac, [[ADCImm1:%[0-9]+]]:cc, [[ADCImm2:%[0-9]+]]:vc = ADCImm [[COPY]], 42, [[COPY1]]
    ; 6502-NEXT: RTS implicit [[ADCImm]], implicit [[ADCImm1]]
    ; 65C02-LABEL: name: uadde_imm
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[ADCImm:%[0-9]+]]:ac, [[ADCImm1:%[0-9]+]]:cc, [[ADCImm2:%[0-9]+]]:vc = ADCImm [[COPY]], 42, [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[ADCImm]], implicit [[ADCImm1]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1) = G_UADDE %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %4
...
---
name: uadde_abs
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: uadde_abs
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[ADCAbs:%[0-9]+]]:ac, [[ADCAbs1:%[0-9]+]]:cc, [[ADCAbs2:%[0-9]+]]:vc = ADCAbs [[COPY]], i16 1234, [[COPY1]]
    ; 6502-NEXT: RTS implicit [[ADCAbs]], implicit [[ADCAbs1]]
    ; 65C02-LABEL: name: uadde_abs
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[ADCAbs:%[0-9]+]]:ac, [[ADCAbs1:%[0-9]+]]:cc, [[ADCAbs2:%[0-9]+]]:vc = ADCAbs [[COPY]], i16 1234, [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[ADCAbs]], implicit [[ADCAbs1]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1) = G_UADDE %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %4
...
---
name: uadde_abs_commute
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: uadde_abs_commute
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[ADCAbs:%[0-9]+]]:ac, [[ADCAbs1:%[0-9]+]]:cc, [[ADCAbs2:%[0-9]+]]:vc = ADCAbs [[COPY]], i16 1234, [[COPY1]]
    ; 6502-NEXT: RTS implicit [[ADCAbs]], implicit [[ADCAbs1]]
    ; 65C02-LABEL: name: uadde_abs_commute
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[ADCAbs:%[0-9]+]]:ac, [[ADCAbs1:%[0-9]+]]:cc, [[ADCAbs2:%[0-9]+]]:vc = ADCAbs [[COPY]], i16 1234, [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[ADCAbs]], implicit [[ADCAbs1]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_LOAD_ABS i16 1234 :: (load (s8))
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1) = G_UADDE %1:any(s8), %0:any(s8), %2:any(s1)
    RTS implicit %3, implicit %4
...
---
name: uadde_idx
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: uadde_idx
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[COPY2:%[0-9]+]]:xy = COPY [[COPY]]
    ; 6502-NEXT: [[ADCIdx:%[0-9]+]]:ac, [[ADCIdx1:%[0-9]+]]:cc, [[ADCIdx2:%[0-9]+]]:vc = ADCIdx [[COPY]], i16 1234, [[COPY2]], [[COPY1]]
    ; 6502-NEXT: RTS implicit [[ADCIdx]], implicit [[ADCIdx1]]
    ; 65C02-LABEL: name: uadde_idx
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[COPY2:%[0-9]+]]:xy = COPY [[COPY]]
    ; 65C02-NEXT: [[ADCIdx:%[0-9]+]]:ac, [[ADCIdx1:%[0-9]+]]:cc, [[ADCIdx2:%[0-9]+]]:vc = ADCIdx [[COPY]], i16 1234, [[COPY2]], [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[ADCIdx]], implicit [[ADCIdx1]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_LOAD_ABS_IDX i16 1234, %0 :: (load (s8))
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1) = G_UADDE %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %4
...
---
name: uadde
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: uadde
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 6502-NEXT: [[COPY2:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[ADCImag8_:%[0-9]+]]:ac, [[ADCImag8_1:%[0-9]+]]:cc, [[ADCImag8_2:%[0-9]+]]:vc = ADCImag8 [[COPY]], [[COPY1]], [[COPY2]]
    ; 6502-NEXT: RTS implicit [[ADCImag8_]], implicit [[ADCImag8_1]]
    ; 65C02-LABEL: name: uadde
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 65C02-NEXT: [[COPY2:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[ADCImag8_:%[0-9]+]]:ac, [[ADCImag8_1:%[0-9]+]]:cc, [[ADCImag8_2:%[0-9]+]]:vc = ADCImag8 [[COPY]], [[COPY1]], [[COPY2]]
    ; 65C02-NEXT: RTS implicit [[ADCImag8_]], implicit [[ADCImag8_1]]
    %0:any(s8) = COPY $x
    %1:any(s8) = COPY $a
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1) = G_UADDE %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %4
...
---
name: sadde_imm
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sadde_imm
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[ADCImm:%[0-9]+]]:ac, [[ADCImm1:%[0-9]+]]:cc, [[ADCImm2:%[0-9]+]]:vc = ADCImm [[COPY]], 42, [[COPY1]]
    ; 6502-NEXT: RTS implicit [[ADCImm]], implicit [[ADCImm2]]
    ; 65C02-LABEL: name: sadde_imm
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[ADCImm:%[0-9]+]]:ac, [[ADCImm1:%[0-9]+]]:cc, [[ADCImm2:%[0-9]+]]:vc = ADCImm [[COPY]], 42, [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[ADCImm]], implicit [[ADCImm2]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1) = G_SADDE %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %4
...
---
name: sadde
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sadde
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 6502-NEXT: [[COPY2:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[ADCImag8_:%[0-9]+]]:ac, [[ADCImag8_1:%[0-9]+]]:cc, [[ADCImag8_2:%[0-9]+]]:vc = ADCImag8 [[COPY]], [[COPY1]], [[COPY2]]
    ; 6502-NEXT: RTS implicit [[ADCImag8_]], implicit [[ADCImag8_2]]
    ; 65C02-LABEL: name: sadde
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 65C02-NEXT: [[COPY2:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[ADCImag8_:%[0-9]+]]:ac, [[ADCImag8_1:%[0-9]+]]:cc, [[ADCImag8_2:%[0-9]+]]:vc = ADCImag8 [[COPY]], [[COPY1]], [[COPY2]]
    ; 65C02-NEXT: RTS implicit [[ADCImag8_]], implicit [[ADCImag8_2]]
    %0:any(s8) = COPY $x
    %1:any(s8) = COPY $a
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1) = G_SADDE %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %4
...
---
name: sbc_imm_c
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sbc_imm_c
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[SBCImm:%[0-9]+]]:ac, [[SBCImm1:%[0-9]+]]:cc, [[SBCImm2:%[0-9]+]]:vc = SBCImm [[COPY]], 42, [[COPY1]]
    ; 6502-NEXT: RTS implicit [[SBCImm]], implicit [[SBCImm1]]
    ; 65C02-LABEL: name: sbc_imm_c
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[SBCImm:%[0-9]+]]:ac, [[SBCImm1:%[0-9]+]]:cc, [[SBCImm2:%[0-9]+]]:vc = SBCImm [[COPY]], 42, [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[SBCImm]], implicit [[SBCImm1]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %4
...
---
name: sbc_c
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sbc_c
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 6502-NEXT: [[COPY2:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[SBCImag8_:%[0-9]+]]:ac, [[SBCImag8_1:%[0-9]+]]:cc, [[SBCImag8_2:%[0-9]+]]:vc = SBCImag8 [[COPY]], [[COPY1]], [[COPY2]]
    ; 6502-NEXT: RTS implicit [[SBCImag8_]], implicit [[SBCImag8_1]]
    ; 65C02-LABEL: name: sbc_c
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 65C02-NEXT: [[COPY2:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[SBCImag8_:%[0-9]+]]:ac, [[SBCImag8_1:%[0-9]+]]:cc, [[SBCImag8_2:%[0-9]+]]:vc = SBCImag8 [[COPY]], [[COPY1]], [[COPY2]]
    ; 65C02-NEXT: RTS implicit [[SBCImag8_]], implicit [[SBCImag8_1]]
    %0:any(s8) = COPY $x
    %1:any(s8) = COPY $a
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %4
...
---
name: sbc_imm_v
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sbc_imm_v
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[SBCImm:%[0-9]+]]:ac, [[SBCImm1:%[0-9]+]]:cc, [[SBCImm2:%[0-9]+]]:vc = SBCImm [[COPY]], 42, [[COPY1]]
    ; 6502-NEXT: RTS implicit [[SBCImm]], implicit [[SBCImm2]]
    ; 65C02-LABEL: name: sbc_imm_v
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[SBCImm:%[0-9]+]]:ac, [[SBCImm1:%[0-9]+]]:cc, [[SBCImm2:%[0-9]+]]:vc = SBCImm [[COPY]], 42, [[COPY1]]
    ; 65C02-NEXT: RTS implicit [[SBCImm]], implicit [[SBCImm2]]
    %0:any(s8) = COPY $x
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %6
...
---
name: sbc_v
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: sbc_v
    ; 6502: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 6502-NEXT: [[COPY2:%[0-9]+]]:cc = COPY $v
    ; 6502-NEXT: [[SBCImag8_:%[0-9]+]]:ac, [[SBCImag8_1:%[0-9]+]]:cc, [[SBCImag8_2:%[0-9]+]]:vc = SBCImag8 [[COPY]], [[COPY1]], [[COPY2]]
    ; 6502-NEXT: RTS implicit [[SBCImag8_]], implicit [[SBCImag8_2]]
    ; 65C02-LABEL: name: sbc_v
    ; 65C02: [[COPY:%[0-9]+]]:ac = COPY $x
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:imag8 = COPY $a
    ; 65C02-NEXT: [[COPY2:%[0-9]+]]:cc = COPY $v
    ; 65C02-NEXT: [[SBCImag8_:%[0-9]+]]:ac, [[SBCImag8_1:%[0-9]+]]:cc, [[SBCImag8_2:%[0-9]+]]:vc = SBCImag8 [[COPY]], [[COPY1]], [[COPY2]]
    ; 65C02-NEXT: RTS implicit [[SBCImag8_]], implicit [[SBCImag8_2]]
    %0:any(s8) = COPY $x
    %1:any(s8) = COPY $a
    %2:any(s1) = COPY $v
    %3:any(s8), %4:any(s1), %5:any(s1), %6:any(s1), %7:any(s1) = G_SBC %0:any(s8), %1:any(s8), %2:any(s1)
    RTS implicit %3, implicit %6
...
---
name: unmerge
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; 6502-LABEL: name: unmerge
    ; 6502: [[COPY:%[0-9]+]]:anyi8 = COPY %2.sublo:imag16
    ; 6502-NEXT: [[COPY1:%[0-9]+]]:anyi8 = COPY %2.subhi:imag16
    ; 6502-NEXT: RTS implicit [[COPY]], implicit [[COPY1]]
    ; 65C02-LABEL: name: unmerge
    ; 65C02: [[COPY:%[0-9]+]]:anyi8 = COPY %2.sublo:imag16
    ; 65C02-NEXT: [[COPY1:%[0-9]+]]:anyi8 = COPY %2.subhi:imag16
    ; 65C02-NEXT: RTS implicit [[COPY]], implicit [[COPY1]]
    %1:any(s8), %2:any(s8) = G_UNMERGE_VALUES %0:imag16(s16)
    RTS implicit %1, implicit %2
...
