# RUN: llc -run-pass=irtranslator -verify-machineinstrs -o - %s | FileCheck %s
--- |
  target triple = "mos"

  define void @void() {
  entry:
    ret void
  }

  define void @many_args(i16 %a, i16 %b, i16 %c, i16 %d) {
  ; CHECK-LABEL: name: many_args
  entry:
  ; CHECK-LABEL: entry:
    ; CHECK:      %4:_(s8) = COPY $a
    ; CHECK-NEXT: %5:_(s8) = COPY $x
    ; CHECK-NEXT: %0:_(s16) = G_MERGE_VALUES %4(s8), %5(s8)
    ; CHECK-NEXT: %6:_(s8) = COPY $rc2
    ; CHECK-NEXT: %7:_(s8) = COPY $rc3
    ; CHECK-NEXT: %1:_(s16) = G_MERGE_VALUES %6(s8), %7(s8)
    ; CHECK-NEXT: %8:_(s8) = COPY $rc6
    ; CHECK-NEXT: %9:_(s8) = COPY $rc7
    ; CHECK-NEXT: %2:_(s16) = G_MERGE_VALUES %8(s8), %9(s8)
    ; CHECK-NEXT: %12:_(p0) = G_FRAME_INDEX %fixed-stack.1
    ; CHECK-NEXT: %10:_(s8) = G_LOAD %12(p0) :: (invariant load 1 from %fixed-stack.1)
    ; CHECK-NEXT: %13:_(p0) = G_FRAME_INDEX %fixed-stack.0
    ; CHECK-NEXT: %11:_(s8) = G_LOAD %13(p0) :: (invariant load 1 from %fixed-stack.0)
    ; CHECK-NEXT: %3:_(s16) = G_MERGE_VALUES %10(s8), %11(s8)

    ret void
    ; CHECK-NEXT: RTS
  }

  define void @preserve_most_call() {
  ; CHECK-LABEL: name: preserve_most_call
  entry:
  ; CHECK-LABEL: entry:

    call void @void()
    ; CHECK: JSR @void, mos_preservemost_csr
    ret void
    ; CHECK: RTS
  }

  !llvm.module.flags = !{!0}
  !0 = !{i32 1, !"mos-isr-used", i32 1}
...
