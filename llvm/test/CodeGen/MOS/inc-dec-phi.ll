; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs < %s | FileCheck %s

target datalayout = "e-m:e-p:16:8-p1:8:8-i16:8-i32:8-i64:8-f32:8-f64:8-a:8-Fi8-n8"
target triple = "mos"

@s = global i8 0

define i8 @incdecphi(i8 %t, i8 %v) {
; CHECK-LABEL: incdecphi:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    tay
; CHECK-NEXT:    beq .LBB0_2
; CHECK-NEXT:  ; %bb.1: ; %select.false
; CHECK-NEXT:    inx
; CHECK-NEXT:    txa
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB0_2: ; %entry
; CHECK-NEXT:    dex
; CHECK-NEXT:    txa
; CHECK-NEXT:    rts
entry:
  %tobool.not = icmp eq i8 %t, 0
  br i1 %tobool.not, label %select.end, label %select.false

select.false:                                     ; preds = %entry
  br label %select.end

select.end:                                       ; preds = %entry, %select.false
  %. = phi i8 [ -1, %entry ], [ 1, %select.false ]
  %sub = add i8 %., %v
  ret i8 %sub
}

define i8 @load_incdecphi(i8 %t) {
; CHECK-LABEL: load_incdecphi:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    tax
; CHECK-NEXT:    beq .LBB1_2
; CHECK-NEXT:  ; %bb.1: ; %select.false
; CHECK-NEXT:    ldx s
; CHECK-NEXT:    inx
; CHECK-NEXT:    txa
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB1_2: ; %entry
; CHECK-NEXT:    ldx s
; CHECK-NEXT:    dex
; CHECK-NEXT:    txa
; CHECK-NEXT:    rts
entry:
  %tobool.not = icmp eq i8 %t, 0
  br i1 %tobool.not, label %select.end, label %select.false

select.false:                                     ; preds = %entry
  br label %select.end

select.end:                                       ; preds = %entry, %select.false
  %. = phi i8 [ -1, %entry ], [ 1, %select.false ]
  %0 = load i8, ptr @s
  %sub = add i8 %0, %.
  ret i8 %sub
}

define void @rmw_incdecphi(i8 %t) {
; CHECK-LABEL: rmw_incdecphi:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    tax
; CHECK-NEXT:    beq .LBB2_2
; CHECK-NEXT:  ; %bb.1: ; %select.false
; CHECK-NEXT:    inc s
; CHECK-NEXT:    rts
; CHECK-NEXT:  .LBB2_2: ; %entry
; CHECK-NEXT:    dec s
; CHECK-NEXT:    rts
entry:
  %tobool.not = icmp eq i8 %t, 0
  br i1 %tobool.not, label %select.end, label %select.false

select.false:                                     ; preds = %entry
  br label %select.end

select.end:                                       ; preds = %entry, %select.false
  %. = phi i8 [ -1, %entry ], [ 1, %select.false ]
  %0 = load i8, ptr @s
  %sub = add i8 %0, %.
  store i8 %sub, ptr @s
  ret void
}
