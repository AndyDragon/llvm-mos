# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=prologepilog -verify-machineinstrs -o - %s | FileCheck %s
---
name: addrlostk
stack:
  - { id: 0, size: 256 }
  - { id: 1, size: 2 }
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: addrlostk
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 1, $c, implicit-def $nz
    ; CHECK: $rc2 = COPY killed $a
    $rc2, $c, dead $v = AddrLostk %stack.1, 1, implicit-def $nz
...
---
name: addrlostk_0
stack:
  - { id: 0, size: 256 }
  - { id: 1, size: 2 }
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: addrlostk_0
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $rc2 = COPY $rc0
    $rc2, $c, dead $v = AddrLostk %stack.1, 0, implicit-def $nz
...
---
name: addrhistk
stack:
  - { id: 0, size: 256 }
  - { id: 1, size: 2 }
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: addrhistk
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc1
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 1, $c, implicit-def $nz
    ; CHECK: $rc3 = COPY killed $a
    $c = LDCImm 0
    $rc3, dead $c, dead $v = AddrHistk %stack.0, 255, $c, implicit-def $nz
...
---
name: addrhistk_0
stack:
  - { id: 0, size: 256 }
  - { id: 1, size: 2 }
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: addrhistk_0
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $rc3 = COPY $rc1
    $c = LDCImm 0
    $rc3, dead $c, dead $v = AddrHistk %stack.1, 0, $c, implicit-def $nz
...
---
name: incsp
stack:
  - { id: 0, size: 1234 }
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: incsp
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 46, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 251, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 210, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 4, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: RTS
    RTS
...
---
name: incsp_hi_only
stack:
  - { id: 0, size: 512 }
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: incsp_hi_only
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc1
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc1
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 2, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: RTS
    RTS
...
---
name: ld_byte
stack:
  - { id: 0, size: 1 }
  - { id: 1, size: 2 }
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: ld_byte
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 253, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 255, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $y = LDImm 1, implicit-def $nz
    ; CHECK: $a = LDYIndir $rs0, killed $y, implicit-def $nz :: (load 1 from %stack.1 + 1)
    $a = LDstk %stack.1, 1, implicit-def $nz :: (load 1 from %stack.1 + 1)
...
---
name: ld_byte_high
stack:
  - { id: 0, size: 256 }
  - { id: 1, size: 2 }
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: ld_byte_high
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $rc2 = COPY $rc0
    ; CHECK: $a = COPY $rc1
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 1, $c, implicit-def $nz
    ; CHECK: $rc3 = COPY killed $a, implicit $rs1
    ; CHECK: $y = LDImm 0, implicit-def $nz
    ; CHECK: $a = LDYIndir killed $rs1, killed $y, implicit-def $nz :: (load 1 from %stack.0 + 254)
    $a = LDstk %stack.0, 254, implicit-def $nz :: (load 1 from %stack.0 + 254)
...
---
name: ld_byte_x
stack:
  - { id: 0, size: 1 }
  - { id: 1, size: 2 }
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: ld_byte_x
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 253, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 255, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $y = LDImm 1, implicit-def $nz
    ; CHECK: $a = LDYIndir $rs0, killed $y, implicit-def $nz :: (load 1 from %stack.1 + 1)
    ; CHECK: $x = COPY killed $a
    $x = LDstk %stack.1, 1, implicit-def $nz :: (load 1 from %stack.1 + 1)
...
---
name: ld_ptr
stack:
  - { id: 0, size: 4 }
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ld_ptr
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 252, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 255, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $y = LDImm 2, implicit-def $nz
    ; CHECK: $a = LDYIndir $rs0, killed $y, implicit-def $nz :: (load 1 from %stack.0 + 2, align 2)
    ; CHECK: $rc0 = COPY killed $a
    ; CHECK: $y = LDImm 3, implicit-def $nz
    ; CHECK: $a = LDYIndir $rs0, killed $y, implicit-def $nz :: (load 1 from %stack.0 + 3, basealign 2)
    ; CHECK: $rc1 = COPY killed $a
    $rs0 = LDstk %stack.0, 2, implicit-def $nz :: (load 2 from %stack.0 + 2)

...
---
name: st_byte
stack:
  - { id: 0, size: 1 }
  - { id: 1, size: 2 }
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: st_byte
    ; CHECK: PH $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 253, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 255, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $a = PL implicit-def $nz
    ; CHECK: $y = LDImm 1, implicit-def $nz
    ; CHECK: STYIndir $a, $rs0, killed $y :: (store 1 into %stack.1 + 1)
    STstk $a, %stack.1, 1, implicit-def $nz :: (store 1 into %stack.1 + 1)
...
---
name: st_byte_high
stack:
  - { id: 0, size: 256 }
  - { id: 1, size: 2 }
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: st_byte_high
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 254, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $rc2 = COPY $rc0
    ; CHECK: $a = COPY $rc1
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 1, $c, implicit-def $nz
    ; CHECK: $rc3 = COPY killed $a, implicit $rs1
    ; CHECK: $a = COPY $x
    ; CHECK: $y = LDImm 0, implicit-def $nz
    ; CHECK: STYIndir killed $a, killed $rs1, killed $y :: (store 1 into %stack.0 + 254)
    STstk $x, %stack.0, 254, implicit-def $nz :: (store 1 into %stack.0 + 254)
...
---
name: st_ptr
stack:
  - { id: 0, size: 4 }
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: st_ptr
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 252, $c, implicit-def $nz
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 255, $c, implicit-def $nz
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $a = COPY $rc0
    ; CHECK: $y = LDImm 2, implicit-def $nz
    ; CHECK: STYIndir killed $a, $rs0, killed $y :: (store 1 into %stack.0 + 2, align 2)
    ; CHECK: $a = COPY $rc1
    ; CHECK: $y = LDImm 3, implicit-def $nz
    ; CHECK: STYIndir killed $a, $rs0, killed $y :: (store 1 into %stack.0 + 3, basealign 2)
    STstk $rs0, %stack.0, 2, implicit-def $nz :: (store 2 into %stack.0 + 2)

...
