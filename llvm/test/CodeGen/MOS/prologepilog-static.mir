# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=mos -run-pass=prologepilog -verify-machineinstrs -o - %s | FileCheck %s
--- |
  target datalayout = "e-p:16:8:8-i16:8:8-i32:8:8-i64:8:8-f32:8:8-f64:8:8-a:8:8-Fi8-n8"
  target triple = "mos"

  define void @norecurse() norecurse {
  entry:
    ret void
  }

  define void @norecurse_variable_sized() norecurse {
  entry:
    ret void
  }
---
name: norecurse
stack:
  - { id: 0, size: 1}
  - { id: 1, size: 1}
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: norecurse
    ; CHECK: PH $a
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 254, $c
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 255, $c
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: $a = PL
    ; CHECK: STAbs $a, target-index(mos-static-stack) :: (store 1 into %stack.0)
    ; CHECK: $a = LDAbs target-index(mos-static-stack) + 1 :: (load 1 from %stack.1)
    ; CHECK: $c = LDCImm 0
    ; CHECK: $a = COPY $rc0
    ; CHECK: $a, $c, dead $v = ADCImm $a, 2, $c
    ; CHECK: $rc0 = COPY $a
    ; CHECK: $a = COPY $rc1, implicit $a
    ; CHECK: $a, dead $c, dead $v = ADCImm $a, 0, $c
    ; CHECK: $rc1 = COPY killed $a
    ; CHECK: RTS
    STAbsOffset $a, %stack.0, 0 :: (store 1 into %stack.0)
    $a = LDAbsOffset %stack.1, 0 :: (load 1 from %stack.1)
    ADJCALLSTACKDOWN 1, 0, implicit-def $rs0, implicit $rs0
    ADJCALLSTACKUP 1, 0, implicit-def $rs0, implicit $rs0
    ADJCALLSTACKDOWN 2, 0, implicit-def $rs0, implicit $rs0
    ADJCALLSTACKUP 2, 0, implicit-def $rs0, implicit $rs0
    RTS
...
---
name: norecurse_variable_sized
stack:
  - { id: 0, type: variable-sized }
  - { id: 1, size: 1 }
  - { id: 2, size: 2 }
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: norecurse_variable_sized
    ; CHECK: $a = frame-setup COPY $rc4
    ; CHECK: frame-setup PH killed $a
    ; CHECK: $a = frame-setup COPY $rc5
    ; CHECK: frame-setup PH killed $a
    ; CHECK: $rs2 = COPY $rs0
    ; CHECK: $a = LDAbs target-index(mos-static-stack) + 2 :: (load 1 from %stack.2 + 1)
    ; CHECK: $rs0 = COPY $rs2
    ; CHECK: $a = frame-destroy PL
    ; CHECK: $rc5 = frame-destroy COPY killed $a
    ; CHECK: $a = frame-destroy PL
    ; CHECK: $rc4 = frame-destroy COPY killed $a
    ; CHECK: RTS implicit $rc4, implicit $rc5
    $a = LDAbsOffset %stack.2, 1 :: (load 1 from %stack.2 + 1)
    RTS
...
